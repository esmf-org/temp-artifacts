2022-07-21 23:09:24
0: --------------------------------------- 
1: --------------------------------------- 
1: Start of  System Test ESMF_CompFortranAndC
1: --------------------------------------- 
2: --------------------------------------- 
2: Start of  System Test ESMF_CompFortranAndC
2: --------------------------------------- 
3: --------------------------------------- 
3: Start of  System Test ESMF_CompFortranAndC
3: --------------------------------------- 
4: --------------------------------------- 
4: Start of  System Test ESMF_CompFortranAndC
4: --------------------------------------- 
5: --------------------------------------- 
5: Start of  System Test ESMF_CompFortranAndC
5: --------------------------------------- 
0: Start of  System Test ESMF_CompFortranAndC
0: --------------------------------------- 
1: Comp Create (Fortran) finished, name = Fortran Component
3: Comp Create (Fortran) finished, name = Fortran Component
0: Comp Create (Fortran) finished, name = Fortran Component
2: Comp Create (Fortran) finished, name = Fortran Component
4: Comp Create (Fortran) finished, name = Fortran Component
5: Comp Create (Fortran) finished, name = Fortran Component
0: Comp Create (C) finished, name = C Component
1: Comp Create (C) finished, name = C Component
2: Comp Create (C) finished, name = C Component
3: Comp Create (C) finished, name = C Component
4: Comp Create (C) finished, name = C Component
5: Comp Create (C) finished, name = C Component
0: In mySetVMInFortran routine
1: In mySetVMInFortran routine
2: In mySetVMInFortran routine
3: In mySetVMInFortran routine
3: CompInFortran SetVM finished, rc=            0           0
4: In mySetVMInFortran routine
4: CompInFortran SetVM finished, rc=            0           0
5: In mySetVMInFortran routine
5: CompInFortran SetVM finished, rc=            0           0
0: CompInFortran SetVM finished, rc=            0           0
1: CompInFortran SetVM finished, rc=            0           0
2: CompInFortran SetVM finished, rc=            0           0
3: In mySetServicesInFortran routine
4: In mySetServicesInFortran routine
5: In mySetServicesInFortran routine
0: In mySetServicesInFortran routine
1: In mySetServicesInFortran routine
2: In mySetServicesInFortran routine
3: CompInFortran SetServices finished, rc=            0           0
5: CompInFortran SetServices finished, rc=            0           0
0: CompInFortran SetServices finished, rc=            0           0
1: CompInFortran SetServices finished, rc=            0           0
2: CompInFortran SetServices finished, rc=            0           0
4: CompInFortran SetServices finished, rc=            0           0
3:In mySetServicesInC()
4:In mySetServicesInC()
5:In mySetServicesInC()
5: Gridded Component:
0:In mySetServicesInC()
1:In mySetServicesInC()
1: Gridded Component:
2:In mySetServicesInC()
2: Gridded Component:
3: Gridded Component:
3:  Component name = C Component
4: Gridded Component:
4:  Component name = C Component
0: Gridded Component:
0:  Component name = C Component
1:  Component name = C Component
1: CompInC SetServices finished, rc=            0           0
2:  Component name = C Component
2: CompInC SetServices finished, rc=            0           0
4: CompInC SetServices finished, rc=            0           0
5:  Component name = C Component
5: CompInC SetServices finished, rc=            0           0
0: CompInC SetServices finished, rc=            0           0
3: CompInC SetServices finished, rc=            0           0
1: Time Interval set
0: Time Interval set
2: Time Interval set
3: Time Interval set
4: Time Interval set
5: Time Interval set
5: Start Time set
0: Start Time set
0: Stop Time set
1: Start Time set
1: Stop Time set
2: Start Time set
2: Stop Time set
3: Start Time set
3: Stop Time set
4: Start Time set
4: Stop Time set
5: Stop Time set
1: Clock created
2: Clock created
3: Clock created
4: Clock created
5: Clock created
0: Clock created
0: In myInitInFortran routine
1: In myInitInFortran routine
2: In myInitInFortran routine
3: In myInitInFortran routine
4: In myInitInFortran routine
5: In myInitInFortran routine
1: Gridded Component:
1:  Component name = Fortran Component
3: Gridded Component:
3:  Component name = Fortran Component
5: Gridded Component:
5:  Component name = Fortran Component
0: Gridded Component:
0:  Component name = Fortran Component
2: Gridded Component:
2:  Component name = Fortran Component
4: Gridded Component:
4:  Component name = Fortran Component
1: ESMF_StatePrint: (pet 1):
1:  State name: igrid export state
3: ESMF_StatePrint: (pet 3):
3:  State name: igrid export state
4: ESMF_StatePrint: (pet 4):
4:  State name: igrid export state
5: ESMF_StatePrint: (pet 5):
5:  State name: igrid export state
0: ESMF_StatePrint: (pet 0):
2: ESMF_StatePrint: (pet 2):
2:  State name: igrid export state
0:  State name: igrid export state
1:     status: Export State, object count: 0
2:     status: Export State, object count: 0
3:     status: Export State, object count: 0
4:     status: Export State, object count: 0
5:     status: Export State, object count: 0
0:     status: Export State, object count: 0
1:     reconcile needed: F
2:     reconcile needed: F
3:     reconcile needed: F
4:     reconcile needed: F
0:     reconcile needed: F
1: Base name    = igrid export state
2: Base name    = igrid export state
5:     reconcile needed: F
5: Base name    = igrid export state
0: Base name    = igrid export state
1: Status: Base = Ready,  object = Ready
1: Proxy        = no
1: Root Info (Attributes):
2: Status: Base = Ready,  object = Ready
2: Proxy        = no
2: Root Info (Attributes):
3: Base name    = igrid export state
3: Status: Base = Ready,  object = Ready
3: Proxy        = no
3: Root Info (Attributes):
4: Base name    = igrid export state
4: Status: Base = Ready,  object = Ready
4: Proxy        = no
4: Root Info (Attributes):
5: Status: Base = Ready,  object = Ready
5: Proxy        = no
5: Root Info (Attributes):
0: Status: Base = Ready,  object = Ready
0: Proxy        = no
0: Root Info (Attributes):
2:{} ESMF_StatePrint: (pet 2):
2:  State name: igrid export state
5:{} ESMF_StatePrint: (pet 5):
5:  State name: igrid export state
0:{} ESMF_StatePrint: (pet 0):
0:  State name: igrid export state
1:{} ESMF_StatePrint: (pet 1):
1:  State name: igrid export state
3:{} ESMF_StatePrint: (pet 3):
3:  State name: igrid export state
4:{} ESMF_StatePrint: (pet 4):
4:  State name: igrid export state
0:     status: Export State, object count: 1
0:     reconcile needed: T
2:     status: Export State, object count: 1
2:     reconcile needed: T
0: Base name    = igrid export state
0: Status: Base = Ready,  object = Ready
0: Proxy        = no
1:     status: Export State, object count: 1
1:     reconcile needed: T
1: Base name    = igrid export state
1: Status: Base = Ready,  object = Ready
2: Base name    = igrid export state
2: Status: Base = Ready,  object = Ready
2: Proxy        = no
2: Root Info (Attributes):
3:     status: Export State, object count: 1
3:     reconcile needed: T
3: Base name    = igrid export state
3: Status: Base = Ready,  object = Ready
3: Proxy        = no
3: Root Info (Attributes):
4:     status: Export State, object count: 1
4:     reconcile needed: T
4: Base name    = igrid export state
4: Status: Base = Ready,  object = Ready
4: Proxy        = no
4: Root Info (Attributes):
5:     status: Export State, object count: 1
5:     reconcile needed: T
5: Base name    = igrid export state
5: Status: Base = Ready,  object = Ready
5: Proxy        = no
5: Root Info (Attributes):
0: Root Info (Attributes):
0:{}     object: 1,name: array1
0:            type: Array
1: Proxy        = no
1: Root Info (Attributes):
1:{}     object: 1,name: array1
2:{}     object: 1,name: array1
2:            type: Array
3:{}     object: 1,name: array1
4:{}     object: 1,name: array1
4:            type: Array
5:{}     object: 1,name: array1
5:            type: Array
0: CompInFortran Initialize returned, rc=           0           0
1:            type: Array
1: CompInFortran Initialize returned, rc=           0           0
2: CompInFortran Initialize returned, rc=           0           0
2:In myInitInC()
3:            type: Array
3: CompInFortran Initialize returned, rc=           0           0
0:In myInitInC()
1:In myInitInC()
4: CompInFortran Initialize returned, rc=           0           0
4:In myInitInC()
5: CompInFortran Initialize returned, rc=           0           0
5:In myInitInC()
3:In myInitInC()
1:local ptr[0] = 1
1:local ptr[1] = 2
1:local ptr[0] = 0
0:local ptr[0] = 1
0:local ptr[1] = 2
0:local ptr[0] = 0
2:local ptr[0] = 1
2:local ptr[1] = 2
2:local ptr[0] = 0
3:local ptr[0] = 1
3:local ptr[1] = 2
3:local ptr[0] = 0
4:local ptr[0] = 1
4:local ptr[1] = 2
4:local ptr[0] = 0
5:local ptr[0] = 1
5:local ptr[1] = 2
5:local ptr[0] = 0
1: CompInC Initialize returned, rc=           0           0
2: CompInC Initialize returned, rc=           0           0
5: CompInC Initialize returned, rc=           0           0
0: CompInC Initialize returned, rc=           0           0
3: CompInC Initialize returned, rc=           0           0
4: CompInC Initialize returned, rc=           0           0
5: In myRunInFortran routine
2: In myRunInFortran routine
0: In myRunInFortran routine
1: In myRunInFortran routine
3: In myRunInFortran routine
4: In myRunInFortran routine
0: In Fortran Component Run, farray=   0.000000000000000E+000
0:  0.000000000000000E+000  0.000000000000000E+000  0.000000000000000E+000
0:  0.000000000000000E+000   1.00000000000000        1.00000000000000     
2: In Fortran Component Run, farray=   0.000000000000000E+000
2:  0.000000000000000E+000  0.000000000000000E+000  0.000000000000000E+000
2:  0.000000000000000E+000   1.00000000000000        1.00000000000000     
2:   1.00000000000000        1.00000000000000        1.00000000000000     
3: In Fortran Component Run, farray=   0.000000000000000E+000
3:  0.000000000000000E+000  0.000000000000000E+000  0.000000000000000E+000
3:  0.000000000000000E+000   1.00000000000000        1.00000000000000     
3:   1.00000000000000        1.00000000000000        1.00000000000000     
4: In Fortran Component Run, farray=   0.000000000000000E+000
4:  0.000000000000000E+000  0.000000000000000E+000  0.000000000000000E+000
4:  0.000000000000000E+000   1.00000000000000        1.00000000000000     
4:   1.00000000000000        1.00000000000000        1.00000000000000     
5: In Fortran Component Run, farray=   0.000000000000000E+000
5:  0.000000000000000E+000  0.000000000000000E+000  0.000000000000000E+000
5:  0.000000000000000E+000   1.00000000000000        1.00000000000000     
5:   1.00000000000000        1.00000000000000        1.00000000000000     
0:   1.00000000000000        1.00000000000000        1.00000000000000     
1: In Fortran Component Run, farray=   0.000000000000000E+000
1:  0.000000000000000E+000  0.000000000000000E+000  0.000000000000000E+000
1:  0.000000000000000E+000   1.00000000000000        1.00000000000000     
1:   1.00000000000000        1.00000000000000        1.00000000000000     
0: Field Print Starts ====>
1: Field Print Starts ====>
2: Field Print Starts ====>
2: Field base status = Ready
0: Field base status = Ready
0:   Name = 'Field from C'
1: Field base status = Ready
1:   Name = 'Field from C'
2:   Name = 'Field from C'
3: Field Print Starts ====>
3: Field base status = Ready
3:   Name = 'Field from C'
4: Field Print Starts ====>
4: Field base status = Ready
4:   Name = 'Field from C'
4: Base name    = Field from C
5: Field Print Starts ====>
5: Field base status = Ready
5:   Name = 'Field from C'
5: Base name    = Field from C
5: Status: Base = Ready,  object = Ready
5: Proxy        = no
5: Root Info (Attributes):
0: Base name    = Field from C
0: Status: Base = Ready,  object = Ready
0: Proxy        = no
0: Root Info (Attributes):
1: Base name    = Field from C
1: Status: Base = Ready,  object = Ready
1: Proxy        = no
1: Root Info (Attributes):
2: Base name    = Field from C
2: Status: Base = Ready,  object = Ready
2: Proxy        = no
2: Root Info (Attributes):
3: Base name    = Field from C
3: Status: Base = Ready,  object = Ready
3: Proxy        = no
3: Root Info (Attributes):
3:{} Field status =            4
4: Status: Base = Ready,  object = Ready
4: Proxy        = no
4: Root Info (Attributes):
4:{} Field status =            4
0:{} Field status =            4
1:{} Field status =            4
2:{} Field status =            4
5:{} Field status =            4
0: gridrank =            1
1: gridrank =            1
2: gridrank =            1
3: gridrank =            1
4: gridrank =            1
4:--- ESMCI::Array::print start ---
4: Base name    = Field from C
5: gridrank =            1
5:--- ESMCI::Array::print start ---
5: Base name    = Field from C
0:--- ESMCI::Array::print start ---
0: Base name    = Field from C
1:--- ESMCI::Array::print start ---
1: Base name    = Field from C
1: Status: Base = Ready,  object = Ready
1: Proxy        = no
2:--- ESMCI::Array::print start ---
2: Base name    = Field from C
2: Status: Base = Ready,  object = Ready
2: Proxy        = no
2: Root Info (Attributes):
2:{}Array typekind/rank: Integer*4 / 3 
2:~ lower class' values ~
2:DistGrid dimCount = 1
2:deCount = 6
2:localDeCount = 1
2:~ local data in LocalArray for DE 2 ~
3:--- ESMCI::Array::print start ---
3: Base name    = Field from C
3: Status: Base = Ready,  object = Ready
3: Proxy        = no
3: Root Info (Attributes):
3:{}Array typekind/rank: Integer*4 / 3 
4: Status: Base = Ready,  object = Ready
4: Proxy        = no
4: Root Info (Attributes):
4:{}Array typekind/rank: Integer*4 / 3 
4:~ lower class' values ~
4:DistGrid dimCount = 1
4:deCount = 6
4:localDeCount = 1
4:~ local data in LocalArray for DE 4 ~
4:LocalArrayPrint: Array at address 0x268f950:
4:            rank = 3, typekind = 3, base_addr = 0x2b256c968280
4:            dim[0] = 602  dim[1] = 2  dim[2] = 3  
5: Status: Base = Ready,  object = Ready
5: Proxy        = no
5: Root Info (Attributes):
5:{}Array typekind/rank: Integer*4 / 3 
5:~ lower class' values ~
5:DistGrid dimCount = 1
5:deCount = 6
5:localDeCount = 1
5:~ local data in LocalArray for DE 5 ~
5:LocalArrayPrint: Array at address 0x268e3f0:
5:            rank = 3, typekind = 3, base_addr = 0x2b256c968280
0: Status: Base = Ready,  object = Ready
0: Proxy        = no
0: Root Info (Attributes):
0:{}Array typekind/rank: Integer*4 / 3 
0:~ lower class' values ~
0:DistGrid dimCount = 1
0:deCount = 6
0:localDeCount = 1
0:~ local data in LocalArray for DE 0 ~
0:LocalArrayPrint: Array at address 0x2682440:
0:            rank = 3, typekind = 3, base_addr = 0x2b256c968280
1: Root Info (Attributes):
1:{}Array typekind/rank: Integer*4 / 3 
1:~ lower class' values ~
1:DistGrid dimCount = 1
1:deCount = 6
1:localDeCount = 1
1:~ local data in LocalArray for DE 1 ~
1:LocalArrayPrint: Array at address 0x2682160:
1:            rank = 3, typekind = 3, base_addr = 0x2b256c968280
2:LocalArrayPrint: Array at address 0x2683630:
2:            rank = 3, typekind = 3, base_addr = 0x2b256ca02040
2:            dim[0] = 275  dim[1] = 2  dim[2] = 3  
2:  Integer, *4, Dim 3, Data values:
2:( 1, 1, 1) =  0
2:( 2, 1, 1) =  0
2:( 3, 1, 1) =  0
2:( 4, 1, 1) =  0
2:( 5, 1, 1) =  0
2:( 6, 1, 1) =  0
2:( 7, 1, 1) =  0
2:( 8, 1, 1) =  0
2:( 9, 1, 1) =  0
2:(10, 1, 1) =  0
2:  skipping to end ...
2:(266, 2, 3) =  0
2:(267, 2, 3) =  0
2:(268, 2, 3) =  0
2:(269, 2, 3) =  0
3:~ lower class' values ~
3:DistGrid dimCount = 1
3:deCount = 6
3:localDeCount = 1
3:~ local data in LocalArray for DE 3 ~
3:LocalArrayPrint: Array at address 0x2682290:
3:            rank = 3, typekind = 3, base_addr = 0x2b256ca02040
3:            dim[0] = 307  dim[1] = 2  dim[2] = 3  
3:  Integer, *4, Dim 3, Data values:
3:( 1, 1, 1) =  0
3:( 2, 1, 1) =  0
3:( 3, 1, 1) =  0
3:( 4, 1, 1) =  0
3:( 5, 1, 1) =  0
4:  Integer, *4, Dim 3, Data values:
4:( 1, 1, 1) =  0
4:( 2, 1, 1) =  0
4:( 3, 1, 1) =  0
4:( 4, 1, 1) =  0
4:( 5, 1, 1) =  0
4:( 6, 1, 1) =  0
4:( 7, 1, 1) =  0
4:( 8, 1, 1) =  0
4:( 9, 1, 1) =  0
4:(10, 1, 1) =  0
4:  skipping to end ...
4:(593, 2, 3) =  0
4:(594, 2, 3) =  0
4:(595, 2, 3) =  0
4:(596, 2, 3) =  0
4:(597, 2, 3) =  0
4:(598, 2, 3) =  0
4:(599, 2, 3) =  0
4:(600, 2, 3) =  0
4:(601, 2, 3) =  0
4:(602, 2, 3) =  0
4:dim 1: [0]: [1 [1 [1, 602] 602] 602]
4:dim 2: undistLBound[0]=1            undistUBound[0]=2
0:            dim[0] = 372  dim[1] = 2  dim[2] = 3  
0:  Integer, *4, Dim 3, Data values:
0:( 1, 1, 1) =  0
0:( 2, 1, 1) =  0
0:( 3, 1, 1) =  0
0:( 4, 1, 1) =  0
0:( 5, 1, 1) =  0
0:( 6, 1, 1) =  0
0:( 7, 1, 1) =  0
0:( 8, 1, 1) =  0
0:( 9, 1, 1) =  0
0:(10, 1, 1) =  0
0:  skipping to end ...
0:(363, 2, 3) =  0
0:(364, 2, 3) =  0
0:(365, 2, 3) =  0
0:(366, 2, 3) =  0
0:(367, 2, 3) =  0
0:(368, 2, 3) =  0
1:            dim[0] = 349  dim[1] = 2  dim[2] = 3  
1:  Integer, *4, Dim 3, Data values:
1:( 1, 1, 1) =  0
1:( 2, 1, 1) =  0
1:( 3, 1, 1) =  0
1:( 4, 1, 1) =  0
1:( 5, 1, 1) =  0
1:( 6, 1, 1) =  0
1:( 7, 1, 1) =  0
1:( 8, 1, 1) =  0
1:( 9, 1, 1) =  0
1:(10, 1, 1) =  0
1:  skipping to end ...
1:(340, 2, 3) =  0
1:(341, 2, 3) =  0
1:(342, 2, 3) =  0
1:(343, 2, 3) =  0
1:(344, 2, 3) =  0
1:(345, 2, 3) =  0
1:(346, 2, 3) =  0
1:(347, 2, 3) =  0
1:(348, 2, 3) =  0
2:(270, 2, 3) =  0
2:(271, 2, 3) =  0
2:(272, 2, 3) =  0
2:(273, 2, 3) =  0
2:(274, 2, 3) =  0
2:(275, 2, 3) =  0
2:dim 1: [0]: [1 [1 [1, 275] 275] 275]
2:dim 2: undistLBound[0]=1            undistUBound[0]=2
2:dim 3: undistLBound[1]=1            undistUBound[1]=3
2:--- ESMCI::Array::print end ---
3:( 6, 1, 1) =  0
3:( 7, 1, 1) =  0
3:( 8, 1, 1) =  0
3:( 9, 1, 1) =  0
3:(10, 1, 1) =  0
3:  skipping to end ...
3:(298, 2, 3) =  0
3:(299, 2, 3) =  0
3:(300, 2, 3) =  0
3:(301, 2, 3) =  0
3:(302, 2, 3) =  0
3:(303, 2, 3) =  0
3:(304, 2, 3) =  0
3:(305, 2, 3) =  0
3:(306, 2, 3) =  0
3:(307, 2, 3) =  0
3:dim 1: [0]: [1 [1 [1, 307] 307] 307]
3:dim 2: undistLBound[0]=1            undistUBound[0]=2
3:dim 3: undistLBound[1]=1            undistUBound[1]=3
3:--- ESMCI::Array::print end ---
4:dim 3: undistLBound[1]=1            undistUBound[1]=3
4:--- ESMCI::Array::print end ---
5:            dim[0] = 570  dim[1] = 2  dim[2] = 3  
5:  Integer, *4, Dim 3, Data values:
5:( 1, 1, 1) =  0
5:( 2, 1, 1) =  0
5:( 3, 1, 1) =  0
5:( 4, 1, 1) =  0
5:( 5, 1, 1) =  0
5:( 6, 1, 1) =  0
5:( 7, 1, 1) =  0
5:( 8, 1, 1) =  0
5:( 9, 1, 1) =  0
5:(10, 1, 1) =  0
5:  skipping to end ...
5:(561, 2, 3) =  0
5:(562, 2, 3) =  0
5:(563, 2, 3) =  0
5:(564, 2, 3) =  0
5:(565, 2, 3) =  0
5:(566, 2, 3) =  0
5:(567, 2, 3) =  0
5:(568, 2, 3) =  0
5:(569, 2, 3) =  0
5:(570, 2, 3) =  0
5:dim 1: [0]: [1 [1 [1, 570] 570] 570]
5:dim 2: undistLBound[0]=1            undistUBound[0]=2
5:dim 3: undistLBound[1]=1            undistUBound[1]=3
5:--- ESMCI::Array::print end ---
0:(369, 2, 3) =  0
0:(370, 2, 3) =  0
0:(371, 2, 3) =  0
0:(372, 2, 3) =  0
0:dim 1: [0]: [1 [1 [1, 372] 372] 372]
0:dim 2: undistLBound[0]=1            undistUBound[0]=2
0:dim 3: undistLBound[1]=1            undistUBound[1]=3
0:--- ESMCI::Array::print end ---
1:(349, 2, 3) =  0
1:dim 1: [0]: [1 [1 [1, 349] 349] 349]
1:dim 2: undistLBound[0]=1            undistUBound[0]=2
1:dim 3: undistLBound[1]=1            undistUBound[1]=3
1:--- ESMCI::Array::print end ---
2: arrayrank =            3
2: gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
4: arrayrank =            3
4: gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
4:           1           1           2                0           0
4:          -1           1           3               -1          -1
2:           1           1           2                0           0
2:          -1           1           3               -1          -1
2:          -1          -1          -1               -1          -1
2:          -1          -1          -1               -1          -1
2:          -1          -1          -1               -1          -1
2:          -1          -1          -1               -1          -1
2:          -1          -1          -1               -1          -1
2: Field Print Ends   ====>
3: arrayrank =            3
3: gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
3:           1           1           2                0           0
3:          -1           1           3               -1          -1
3:          -1          -1          -1               -1          -1
4:          -1          -1          -1               -1          -1
4:          -1          -1          -1               -1          -1
4:          -1          -1          -1               -1          -1
4:          -1          -1          -1               -1          -1
4:          -1          -1          -1               -1          -1
4: Field Print Ends   ====>
0: arrayrank =            3
0: gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
0:           1           1           2                0           0
0:          -1           1           3               -1          -1
0:          -1          -1          -1               -1          -1
0:          -1          -1          -1               -1          -1
0:          -1          -1          -1               -1          -1
0:          -1          -1          -1               -1          -1
0:          -1          -1          -1               -1          -1
0: Field Print Ends   ====>
1: arrayrank =            3
1: gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
1:           1           1           2                0           0
1:          -1           1           3               -1          -1
1:          -1          -1          -1               -1          -1
1:          -1          -1          -1               -1          -1
1:          -1          -1          -1               -1          -1
1:          -1          -1          -1               -1          -1
1:          -1          -1          -1               -1          -1
1: Field Print Ends   ====>
2: CompInFortran Run returned, rc=           0           0
2:In myRunInC()
3:          -1          -1          -1               -1          -1
3:          -1          -1          -1               -1          -1
3:          -1          -1          -1               -1          -1
3:          -1          -1          -1               -1          -1
3: Field Print Ends   ====>
3: CompInFortran Run returned, rc=           0           0
4: CompInFortran Run returned, rc=           0           0
4:In myRunInC()
5: arrayrank =            3
5: gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
5:           1           1           2                0           0
5:          -1           1           3               -1          -1
5:          -1          -1          -1               -1          -1
5:          -1          -1          -1               -1          -1
5:          -1          -1          -1               -1          -1
5:          -1          -1          -1               -1          -1
5:          -1          -1          -1               -1          -1
5: Field Print Ends   ====>
5: CompInFortran Run returned, rc=           0           0
0: CompInFortran Run returned, rc=           0           0
0:In myRunInC()
1: CompInFortran Run returned, rc=           0           0
1:In myRunInC()
3:In myRunInC()
2: CompInC Run returned, rc=           0           0
4: CompInC Run returned, rc=           0           0
5:In myRunInC()
0: CompInC Run returned, rc=           0           0
1: CompInC Run returned, rc=           0           0
2: In myFinalInFortran routine
3: CompInC Run returned, rc=           0           0
3: In myFinalInFortran routine
4: In myFinalInFortran routine
5: CompInC Run returned, rc=           0           0
5: In myFinalInFortran routine
0: In myFinalInFortran routine
1: In myFinalInFortran routine
2: CompInFortran Finalize returned, rc=           0           0
3: CompInFortran Finalize returned, rc=           0           0
4: CompInFortran Finalize returned, rc=           0           0
4:In myFinalInC()
0: CompInFortran Finalize returned, rc=           0           0
0:In myFinalInC()
1: CompInFortran Finalize returned, rc=           0           0
1:In myFinalInC()
2:In myFinalInC()
2: ESMF_StatePrint: (pet 2):
2:  State name: igrid export state
3:In myFinalInC()
3: ESMF_StatePrint: (pet 3):
3:  State name: igrid export state
5: CompInFortran Finalize returned, rc=           0           0
5:In myFinalInC()
5: ESMF_StatePrint: (pet 5):
5:  State name: igrid export state
0: ESMF_StatePrint: (pet 0):
0:  State name: igrid export state
1: ESMF_StatePrint: (pet 1):
1:  State name: igrid export state
4: ESMF_StatePrint: (pet 4):
4:  State name: igrid export state
4:     status: Export State, object count: 1
4:     reconcile needed: T
4: Base name    = igrid export state
0:     status: Export State, object count: 1
0:     reconcile needed: T
0: Base name    = igrid export state
0: Status: Base = Ready,  object = Ready
1:     status: Export State, object count: 1
1:     reconcile needed: T
1: Base name    = igrid export state
1: Status: Base = Ready,  object = Ready
1: Proxy        = no
1: Root Info (Attributes):
2:     status: Export State, object count: 1
2:     reconcile needed: T
2: Base name    = igrid export state
2: Status: Base = Ready,  object = Ready
2: Proxy        = no
2: Root Info (Attributes):
3:     status: Export State, object count: 1
3:     reconcile needed: T
3: Base name    = igrid export state
3: Status: Base = Ready,  object = Ready
3: Proxy        = no
3: Root Info (Attributes):
4: Status: Base = Ready,  object = Ready
4: Proxy        = no
4: Root Info (Attributes):
4:{}     object: 1,name: array1
5:     status: Export State, object count: 1
5:     reconcile needed: T
5: Base name    = igrid export state
5: Status: Base = Ready,  object = Ready
5: Proxy        = no
5: Root Info (Attributes):
0: Proxy        = no
0: Root Info (Attributes):
0:{}     object: 1,name: array1
0:            type: Array
1:{}     object: 1,name: array1
1:            type: Array
2:{}     object: 1,name: array1
2:            type: Array
2:Clock ----------------------------------
2:name = Application Clock
2:timeStep = 
2:TimeInterval ---------------------------
3:{}     object: 1,name: array1
3:            type: Array
3:Clock ----------------------------------
3:name = Application Clock
3:timeStep = 
3:TimeInterval ---------------------------
4:            type: Array
4:Clock ----------------------------------
4:name = Application Clock
4:timeStep = 
4:TimeInterval ---------------------------
4:P0Y0M0DT0H0M2S
5:{}     object: 1,name: array1
5:            type: Array
5:Clock ----------------------------------
5:name = Application Clock
5:timeStep = 
5:TimeInterval ---------------------------
5:P0Y0M0DT0H0M2S
5:end TimeInterval -----------------------
5:
5:startTime = 
0:Clock ----------------------------------
0:name = Application Clock
0:timeStep = 
0:TimeInterval ---------------------------
0:P0Y0M0DT0H0M2S
0:end TimeInterval -----------------------
0:
0:startTime = 
0:Time -----------------------------------
1:Clock ----------------------------------
1:name = Application Clock
1:timeStep = 
1:TimeInterval ---------------------------
1:P0Y0M0DT0H0M2S
1:end TimeInterval -----------------------
1:
1:startTime = 
1:Time -----------------------------------
1:2004-09-25T00:00:00
1:end Time -------------------------------
1:
1:stopTime = 
1:Time -----------------------------------
2:P0Y0M0DT0H0M2S
2:end TimeInterval -----------------------
2:
2:startTime = 
2:Time -----------------------------------
2:2004-09-25T00:00:00
2:end Time -------------------------------
2:
2:stopTime = 
2:Time -----------------------------------
2:2004-09-26T00:00:00
2:end Time -------------------------------
2:
2:stopTimeEnabled = true
2:refTime = 
2:Time -----------------------------------
2:2004-09-25T00:00:00
2:end Time -------------------------------
2:
2:currTime = 
2:Time -----------------------------------
3:P0Y0M0DT0H0M2S
3:end TimeInterval -----------------------
3:
3:startTime = 
3:Time -----------------------------------
3:2004-09-25T00:00:00
3:end Time -------------------------------
3:
3:stopTime = 
3:Time -----------------------------------
3:2004-09-26T00:00:00
3:end Time -------------------------------
3:
3:stopTimeEnabled = true
3:refTime = 
3:Time -----------------------------------
3:2004-09-25T00:00:00
3:end Time -------------------------------
3:
3:currTime = 
3:Time -----------------------------------
3:2004-09-25T00:00:00
4:end TimeInterval -----------------------
4:
4:startTime = 
4:Time -----------------------------------
4:2004-09-25T00:00:00
4:end Time -------------------------------
4:
4:stopTime = 
4:Time -----------------------------------
4:2004-09-26T00:00:00
4:end Time -------------------------------
4:
4:stopTimeEnabled = true
4:refTime = 
4:Time -----------------------------------
4:2004-09-25T00:00:00
4:end Time -------------------------------
4:
4:currTime = 
4:Time -----------------------------------
4:2004-09-25T00:00:00
4:end Time -------------------------------
4:
4:prevTime = 
4:Time -----------------------------------
4:2004-09-25T00:00:00
4:end Time -------------------------------
4:
4:advanceCount = 0
4:direction = 1
4:userChangedDirection = false
4:alarmCount = 0
4:alarmList = 
4:end Clock ------------------------------
4:
5:Time -----------------------------------
5:2004-09-25T00:00:00
5:end Time -------------------------------
5:
5:stopTime = 
5:Time -----------------------------------
5:2004-09-26T00:00:00
5:end Time -------------------------------
5:
5:stopTimeEnabled = true
5:refTime = 
5:Time -----------------------------------
5:2004-09-25T00:00:00
5:end Time -------------------------------
5:
5:currTime = 
5:Time -----------------------------------
5:2004-09-25T00:00:00
5:end Time -------------------------------
5:
5:prevTime = 
5:Time -----------------------------------
5:2004-09-25T00:00:00
5:end Time -------------------------------
5:
5:advanceCount = 0
5:direction = 1
5:userChangedDirection = false
5:alarmCount = 0
5:alarmList = 
5:end Clock ------------------------------
5:
0:2004-09-25T00:00:00
0:end Time -------------------------------
0:
0:stopTime = 
0:Time -----------------------------------
0:2004-09-26T00:00:00
0:end Time -------------------------------
0:
0:stopTimeEnabled = true
0:refTime = 
0:Time -----------------------------------
0:2004-09-25T00:00:00
0:end Time -------------------------------
0:
0:currTime = 
0:Time -----------------------------------
0:2004-09-25T00:00:00
0:end Time -------------------------------
0:
0:prevTime = 
0:Time -----------------------------------
0:2004-09-25T00:00:00
0:end Time -------------------------------
0:
0:advanceCount = 0
0:direction = 1
0:userChangedDirection = false
0:alarmCount = 0
0:alarmList = 
0:end Clock ------------------------------
0:
1:2004-09-26T00:00:00
1:end Time -------------------------------
1:
1:stopTimeEnabled = true
1:refTime = 
1:Time -----------------------------------
1:2004-09-25T00:00:00
1:end Time -------------------------------
1:
1:currTime = 
1:Time -----------------------------------
1:2004-09-25T00:00:00
1:end Time -------------------------------
1:
1:prevTime = 
1:Time -----------------------------------
1:2004-09-25T00:00:00
1:end Time -------------------------------
1:
1:advanceCount = 0
1:direction = 1
1:userChangedDirection = false
1:alarmCount = 0
1:alarmList = 
1:end Clock ------------------------------
1:
2:2004-09-25T00:00:00
2:end Time -------------------------------
2:
2:prevTime = 
2:Time -----------------------------------
2:2004-09-25T00:00:00
2:end Time -------------------------------
2:
2:advanceCount = 0
2:direction = 1
2:userChangedDirection = false
2:alarmCount = 0
2:alarmList = 
2:end Clock ------------------------------
2:
3:end Time -------------------------------
3:
3:prevTime = 
3:Time -----------------------------------
3:2004-09-25T00:00:00
3:end Time -------------------------------
3:
3:advanceCount = 0
3:direction = 1
3:userChangedDirection = false
3:alarmCount = 0
3:alarmList = 
3:end Clock ------------------------------
3:
0: Field Print Starts ====>
0: Field base status = Ready
0:   Name = 'Field from C'
1: Field Print Starts ====>
1: Field base status = Ready
1:   Name = 'Field from C'
2: Field Print Starts ====>
2: Field base status = Ready
2:   Name = 'Field from C'
3: Field Print Starts ====>
3: Field base status = Ready
3:   Name = 'Field from C'
3: Base name    = Field from C
3: Status: Base = Ready,  object = Ready
3: Proxy        = no
4: Field Print Starts ====>
4: Field base status = Ready
4:   Name = 'Field from C'
4: Base name    = Field from C
4: Status: Base = Ready,  object = Ready
4: Proxy        = no
4: Root Info (Attributes):
5: Field Print Starts ====>
5: Field base status = Ready
5:   Name = 'Field from C'
5: Base name    = Field from C
5: Status: Base = Ready,  object = Ready
5: Proxy        = no
5: Root Info (Attributes):
0: Base name    = Field from C
0: Status: Base = Ready,  object = Ready
0: Proxy        = no
0: Root Info (Attributes):
0:{} Field status =            4
1: Base name    = Field from C
1: Status: Base = Ready,  object = Ready
1: Proxy        = no
1: Root Info (Attributes):
1:{} Field status =            4
2: Base name    = Field from C
2: Status: Base = Ready,  object = Ready
2: Proxy        = no
2: Root Info (Attributes):
2:{} Field status =            4
3: Root Info (Attributes):
3:{} Field status =            4
4:{} Field status =            4
5:{} Field status =            4
0: gridrank =            1
0:--- ESMCI::Array::print start ---
1: gridrank =            1
1:--- ESMCI::Array::print start ---
1: Base name    = Field from C
3: gridrank =            1
3:--- ESMCI::Array::print start ---
3: Base name    = Field from C
3: Status: Base = Ready,  object = Ready
3: Proxy        = no
3: Root Info (Attributes):
4: gridrank =            1
4:--- ESMCI::Array::print start ---
4: Base name    = Field from C
4: Status: Base = Ready,  object = Ready
4: Proxy        = no
4: Root Info (Attributes):
4:{}Array typekind/rank: Integer*4 / 3 
4:~ lower class' values ~
4:DistGrid dimCount = 1
5: gridrank =            1
5:--- ESMCI::Array::print start ---
5: Base name    = Field from C
5: Status: Base = Ready,  object = Ready
5: Proxy        = no
5: Root Info (Attributes):
5:{}Array typekind/rank: Integer*4 / 3 
5:~ lower class' values ~
5:DistGrid dimCount = 1
5:deCount = 6
5:localDeCount = 1
5:~ local data in LocalArray for DE 5 ~
5:LocalArrayPrint: Array at address 0x268e3f0:
0: Base name    = Field from C
0: Status: Base = Ready,  object = Ready
0: Proxy        = no
0: Root Info (Attributes):
0:{}Array typekind/rank: Integer*4 / 3 
0:~ lower class' values ~
0:DistGrid dimCount = 1
0:deCount = 6
0:localDeCount = 1
0:~ local data in LocalArray for DE 0 ~
0:LocalArrayPrint: Array at address 0x2682440:
0:            rank = 3, typekind = 3, base_addr = 0x2b256c968280
0:            dim[0] = 372  dim[1] = 2  dim[2] = 3  
0:  Integer, *4, Dim 3, Data values:
1: Status: Base = Ready,  object = Ready
1: Proxy        = no
1: Root Info (Attributes):
1:{}Array typekind/rank: Integer*4 / 3 
1:~ lower class' values ~
1:DistGrid dimCount = 1
1:deCount = 6
1:localDeCount = 1
1:~ local data in LocalArray for DE 1 ~
1:LocalArrayPrint: Array at address 0x2682160:
1:            rank = 3, typekind = 3, base_addr = 0x2b256c968280
1:            dim[0] = 349  dim[1] = 2  dim[2] = 3  
1:  Integer, *4, Dim 3, Data values:
1:( 1, 1, 1) =  0
1:( 2, 1, 1) =  0
1:( 3, 1, 1) =  0
1:( 4, 1, 1) =  0
2: gridrank =            1
2:--- ESMCI::Array::print start ---
2: Base name    = Field from C
2: Status: Base = Ready,  object = Ready
2: Proxy        = no
2: Root Info (Attributes):
2:{}Array typekind/rank: Integer*4 / 3 
2:~ lower class' values ~
2:DistGrid dimCount = 1
2:deCount = 6
2:localDeCount = 1
2:~ local data in LocalArray for DE 2 ~
2:LocalArrayPrint: Array at address 0x2683630:
2:            rank = 3, typekind = 3, base_addr = 0x2b256ca02040
2:            dim[0] = 275  dim[1] = 2  dim[2] = 3  
2:  Integer, *4, Dim 3, Data values:
2:( 1, 1, 1) =  0
2:( 2, 1, 1) =  0
2:( 3, 1, 1) =  0
2:( 4, 1, 1) =  0
2:( 5, 1, 1) =  0
2:( 6, 1, 1) =  0
3:{}Array typekind/rank: Integer*4 / 3 
3:~ lower class' values ~
3:DistGrid dimCount = 1
3:deCount = 6
3:localDeCount = 1
3:~ local data in LocalArray for DE 3 ~
3:LocalArrayPrint: Array at address 0x2682290:
3:            rank = 3, typekind = 3, base_addr = 0x2b256ca02040
3:            dim[0] = 307  dim[1] = 2  dim[2] = 3  
3:  Integer, *4, Dim 3, Data values:
3:( 1, 1, 1) =  0
3:( 2, 1, 1) =  0
3:( 3, 1, 1) =  0
3:( 4, 1, 1) =  0
3:( 5, 1, 1) =  0
3:( 6, 1, 1) =  0
3:( 7, 1, 1) =  0
3:( 8, 1, 1) =  0
3:( 9, 1, 1) =  0
3:(10, 1, 1) =  0
3:  skipping to end ...
3:(298, 2, 3) =  0
3:(299, 2, 3) =  0
3:(300, 2, 3) =  0
3:(301, 2, 3) =  0
3:(302, 2, 3) =  0
3:(303, 2, 3) =  0
4:deCount = 6
4:localDeCount = 1
4:~ local data in LocalArray for DE 4 ~
4:LocalArrayPrint: Array at address 0x268f950:
4:            rank = 3, typekind = 3, base_addr = 0x2b256c968280
4:            dim[0] = 602  dim[1] = 2  dim[2] = 3  
4:  Integer, *4, Dim 3, Data values:
4:( 1, 1, 1) =  0
4:( 2, 1, 1) =  0
4:( 3, 1, 1) =  0
4:( 4, 1, 1) =  0
4:( 5, 1, 1) =  0
4:( 6, 1, 1) =  0
4:( 7, 1, 1) =  0
4:( 8, 1, 1) =  0
4:( 9, 1, 1) =  0
4:(10, 1, 1) =  0
4:  skipping to end ...
4:(593, 2, 3) =  0
4:(594, 2, 3) =  0
4:(595, 2, 3) =  0
4:(596, 2, 3) =  0
4:(597, 2, 3) =  0
4:(598, 2, 3) =  0
4:(599, 2, 3) =  0
4:(600, 2, 3) =  0
4:(601, 2, 3) =  0
4:(602, 2, 3) =  0
5:            rank = 3, typekind = 3, base_addr = 0x2b256c968280
5:            dim[0] = 570  dim[1] = 2  dim[2] = 3  
5:  Integer, *4, Dim 3, Data values:
5:( 1, 1, 1) =  0
5:( 2, 1, 1) =  0
5:( 3, 1, 1) =  0
5:( 4, 1, 1) =  0
5:( 5, 1, 1) =  0
5:( 6, 1, 1) =  0
5:( 7, 1, 1) =  0
5:( 8, 1, 1) =  0
5:( 9, 1, 1) =  0
5:(10, 1, 1) =  0
5:  skipping to end ...
5:(561, 2, 3) =  0
5:(562, 2, 3) =  0
5:(563, 2, 3) =  0
5:(564, 2, 3) =  0
5:(565, 2, 3) =  0
5:(566, 2, 3) =  0
5:(567, 2, 3) =  0
5:(568, 2, 3) =  0
5:(569, 2, 3) =  0
5:(570, 2, 3) =  0
5:dim 1: [0]: [1 [1 [1, 570] 570] 570]
5:dim 2: undistLBound[0]=1            undistUBound[0]=2
5:dim 3: undistLBound[1]=1            undistUBound[1]=3
5:--- ESMCI::Array::print end ---
0:( 1, 1, 1) =  0
0:( 2, 1, 1) =  0
0:( 3, 1, 1) =  0
0:( 4, 1, 1) =  0
0:( 5, 1, 1) =  0
0:( 6, 1, 1) =  0
0:( 7, 1, 1) =  0
0:( 8, 1, 1) =  0
0:( 9, 1, 1) =  0
0:(10, 1, 1) =  0
0:  skipping to end ...
0:(363, 2, 3) =  0
0:(364, 2, 3) =  0
0:(365, 2, 3) =  0
0:(366, 2, 3) =  0
0:(367, 2, 3) =  0
0:(368, 2, 3) =  0
0:(369, 2, 3) =  0
0:(370, 2, 3) =  0
0:(371, 2, 3) =  0
0:(372, 2, 3) =  0
0:dim 1: [0]: [1 [1 [1, 372] 372] 372]
0:dim 2: undistLBound[0]=1            undistUBound[0]=2
0:dim 3: undistLBound[1]=1            undistUBound[1]=3
0:--- ESMCI::Array::print end ---
1:( 5, 1, 1) =  0
1:( 6, 1, 1) =  0
1:( 7, 1, 1) =  0
1:( 8, 1, 1) =  0
1:( 9, 1, 1) =  0
1:(10, 1, 1) =  0
1:  skipping to end ...
1:(340, 2, 3) =  0
1:(341, 2, 3) =  0
1:(342, 2, 3) =  0
1:(343, 2, 3) =  0
1:(344, 2, 3) =  0
1:(345, 2, 3) =  0
1:(346, 2, 3) =  0
1:(347, 2, 3) =  0
1:(348, 2, 3) =  0
1:(349, 2, 3) =  0
1:dim 1: [0]: [1 [1 [1, 349] 349] 349]
1:dim 2: undistLBound[0]=1            undistUBound[0]=2
1:dim 3: undistLBound[1]=1            undistUBound[1]=3
1:--- ESMCI::Array::print end ---
2:( 7, 1, 1) =  0
2:( 8, 1, 1) =  0
2:( 9, 1, 1) =  0
2:(10, 1, 1) =  0
2:  skipping to end ...
2:(266, 2, 3) =  0
2:(267, 2, 3) =  0
2:(268, 2, 3) =  0
2:(269, 2, 3) =  0
2:(270, 2, 3) =  0
2:(271, 2, 3) =  0
2:(272, 2, 3) =  0
2:(273, 2, 3) =  0
2:(274, 2, 3) =  0
2:(275, 2, 3) =  0
2:dim 1: [0]: [1 [1 [1, 275] 275] 275]
2:dim 2: undistLBound[0]=1            undistUBound[0]=2
2:dim 3: undistLBound[1]=1            undistUBound[1]=3
2:--- ESMCI::Array::print end ---
3:(304, 2, 3) =  0
3:(305, 2, 3) =  0
3:(306, 2, 3) =  0
3:(307, 2, 3) =  0
3:dim 1: [0]: [1 [1 [1, 307] 307] 307]
3:dim 2: undistLBound[0]=1            undistUBound[0]=2
3:dim 3: undistLBound[1]=1            undistUBound[1]=3
3:--- ESMCI::Array::print end ---
4:dim 1: [0]: [1 [1 [1, 602] 602] 602]
4:dim 2: undistLBound[0]=1            undistUBound[0]=2
4:dim 3: undistLBound[1]=1            undistUBound[1]=3
4:--- ESMCI::Array::print end ---
0: arrayrank =            3
0: gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
0:           1           1           2                0           0
0:          -1           1           3               -1          -1
1: arrayrank =            3
1: gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
1:           1           1           2                0           0
1:          -1           1           3               -1          -1
1:          -1          -1          -1               -1          -1
1:          -1          -1          -1               -1          -1
1:          -1          -1          -1               -1          -1
3: arrayrank =            3
3: gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
3:           1           1           2                0           0
3:          -1           1           3               -1          -1
3:          -1          -1          -1               -1          -1
3:          -1          -1          -1               -1          -1
3:          -1          -1          -1               -1          -1
3:          -1          -1          -1               -1          -1
3:          -1          -1          -1               -1          -1
3: Field Print Ends   ====>
4: arrayrank =            3
4: gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
4:           1           1           2                0           0
4:          -1           1           3               -1          -1
4:          -1          -1          -1               -1          -1
4:          -1          -1          -1               -1          -1
4:          -1          -1          -1               -1          -1
4:          -1          -1          -1               -1          -1
4:          -1          -1          -1               -1          -1
4: Field Print Ends   ====>
5: arrayrank =            3
5: gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
5:           1           1           2                0           0
5:          -1           1           3               -1          -1
5:          -1          -1          -1               -1          -1
5:          -1          -1          -1               -1          -1
5:          -1          -1          -1               -1          -1
5:          -1          -1          -1               -1          -1
5:          -1          -1          -1               -1          -1
5: Field Print Ends   ====>
0:          -1          -1          -1               -1          -1
0:          -1          -1          -1               -1          -1
0:          -1          -1          -1               -1          -1
0:          -1          -1          -1               -1          -1
0:          -1          -1          -1               -1          -1
0: Field Print Ends   ====>
1:          -1          -1          -1               -1          -1
1:          -1          -1          -1               -1          -1
1: Field Print Ends   ====>
2: arrayrank =            3
2: gridToFieldMap ungriddedLBound ungriddedUBound totalLWidth totalUWidth
2:           1           1           2                0           0
2:          -1           1           3               -1          -1
2:          -1          -1          -1               -1          -1
2:          -1          -1          -1               -1          -1
2:          -1          -1          -1               -1          -1
2:          -1          -1          -1               -1          -1
2:          -1          -1          -1               -1          -1
2: Field Print Ends   ====>
0: CompInC Finalize returned, rc=           0           0
1: CompInC Finalize returned, rc=           0           0
3: CompInC Finalize returned, rc=           0           0
2: CompInC Finalize returned, rc=           0           0
5: CompInC Finalize returned, rc=           0           0
4: CompInC Finalize returned, rc=           0           0
0: All Destroy routines done
0:  System Test ESMF_CompFortranAndC                                              
0:                                                                                
0:                                                                                
0:                     complete.
2: All Destroy routines done
2:  System Test ESMF_CompFortranAndC                                              
2:                                                                                
2:                                                                                
2:                     complete.
5: All Destroy routines done
5:  System Test ESMF_CompFortranAndC                                              
5:                                                                                
5:                                                                                
5:                     complete.
5: ------------------------------------------------------------
5: ------------------------------------------------------------
5: Test finished, localPet =            5
0: ------------------------------------------------------------
0: ------------------------------------------------------------
0: Test finished, localPet =            0
0: ------------------------------------------------------------
0: ------------------------------------------------------------
1: All Destroy routines done
1:  System Test ESMF_CompFortranAndC                                              
1:                                                                                
1:                                                                                
1:                     complete.
1: ------------------------------------------------------------
1: ------------------------------------------------------------
1: Test finished, localPet =            1
1: ------------------------------------------------------------
1: ------------------------------------------------------------
2: ------------------------------------------------------------
2: ------------------------------------------------------------
2: Test finished, localPet =            2
2: ------------------------------------------------------------
2: ------------------------------------------------------------
3: All Destroy routines done
3:  System Test ESMF_CompFortranAndC                                              
3:                                                                                
3:                                                                                
3:                     complete.
3: ------------------------------------------------------------
3: ------------------------------------------------------------
3: Test finished, localPet =            3
3: ------------------------------------------------------------
3: ------------------------------------------------------------
4: All Destroy routines done
4:  System Test ESMF_CompFortranAndC                                              
4:                                                                                
4:                                                                                
4:                     complete.
4: ------------------------------------------------------------
4: ------------------------------------------------------------
4: Test finished, localPet =            4
4: ------------------------------------------------------------
4: ------------------------------------------------------------
5: ------------------------------------------------------------
5: ------------------------------------------------------------
0: 
0:  System Test ESMF_CompFortranAndC
0:  SUCCESS:  System Test ESMF_CompFortranAndC finished correctly.
0: 
1: 
1:  System Test ESMF_CompFortranAndC
1:  SUCCESS:  System Test ESMF_CompFortranAndC finished correctly.
1: 
2: 
2:  System Test ESMF_CompFortranAndC
2:  SUCCESS:  System Test ESMF_CompFortranAndC finished correctly.
2: 
3: 
3:  System Test ESMF_CompFortranAndC
3:  SUCCESS:  System Test ESMF_CompFortranAndC finished correctly.
3: 
4: 
4:  System Test ESMF_CompFortranAndC
4:  SUCCESS:  System Test ESMF_CompFortranAndC finished correctly.
4: 
5: 
5:  System Test ESMF_CompFortranAndC
5:  SUCCESS:  System Test ESMF_CompFortranAndC finished correctly.
5: 
2:  PASS  System Test ESMF_CompFortranAndC, ESMF_CompFortranAndCSTest.F90, line 35
2: 9
0:  PASS  System Test ESMF_CompFortranAndC, ESMF_CompFortranAndCSTest.F90, line 35
0: 9
1:  PASS  System Test ESMF_CompFortranAndC, ESMF_CompFortranAndCSTest.F90, line 35
1: 9
3:  PASS  System Test ESMF_CompFortranAndC, ESMF_CompFortranAndCSTest.F90, line 35
3: 9
5:  PASS  System Test ESMF_CompFortranAndC, ESMF_CompFortranAndCSTest.F90, line 35
5: 9
4:  PASS  System Test ESMF_CompFortranAndC, ESMF_CompFortranAndCSTest.F90, line 35
4: 9
