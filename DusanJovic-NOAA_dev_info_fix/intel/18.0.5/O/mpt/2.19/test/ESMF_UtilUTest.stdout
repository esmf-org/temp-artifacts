2022-07-20 14:37:03
0:  Beginning Test, file ESMF_UtilUTest.F90, line 124
1:  Beginning Test, file ESMF_UtilUTest.F90, line 124
1:  NUMBER_OF_PROCESSORS           4
2:  Beginning Test, file ESMF_UtilUTest.F90, line 124
2:  NUMBER_OF_PROCESSORS           4
2: 
3:  Beginning Test, file ESMF_UtilUTest.F90, line 124
3:  NUMBER_OF_PROCESSORS           4
3: 
3:  ESMF_VERSION_MAJOR =           8
0:  NUMBER_OF_PROCESSORS           4
0: 
0:  ESMF_VERSION_MAJOR =           8
0:  ESMF_VERSION_MINOR =           4
0:  ESMF_VERSION_REVISION      =           0
0:  ESMF_VERSION_PATCHLEVEL    =           0
0:  ESMF_VERSION_STRING=8.4.0 beta snapshot
1: 
1:  ESMF_VERSION_MAJOR =           8
1:  ESMF_VERSION_MINOR =           4
1:  ESMF_VERSION_REVISION      =           0
1:  ESMF_VERSION_PATCHLEVEL    =           0
1:  ESMF_VERSION_STRING=8.4.0 beta snapshot
1:  PASS  Comparing numeric and character major version, ESMF_UtilUTest.F90, line 
2:  ESMF_VERSION_MAJOR =           8
2:  ESMF_VERSION_MINOR =           4
2:  ESMF_VERSION_REVISION      =           0
2:  ESMF_VERSION_PATCHLEVEL    =           0
2:  ESMF_VERSION_STRING=8.4.0 beta snapshot
2:  PASS  Comparing numeric and character major version, ESMF_UtilUTest.F90, line 
2: 153
3:  ESMF_VERSION_MINOR =           4
3:  ESMF_VERSION_REVISION      =           0
3:  ESMF_VERSION_PATCHLEVEL    =           0
3:  ESMF_VERSION_STRING=8.4.0 beta snapshot
3:  PASS  Comparing numeric and character major version, ESMF_UtilUTest.F90, line 
3: 153
0:  PASS  Comparing numeric and character major version, ESMF_UtilUTest.F90, line 
0: 153
1: 153
0:  PASS  Comparing numeric and character minor version, ESMF_UtilUTest.F90, line 
0: 164
1:  PASS  Comparing numeric and character minor version, ESMF_UtilUTest.F90, line 
1: 164
2:  PASS  Comparing numeric and character minor version, ESMF_UtilUTest.F90, line 
2: 164
3:  PASS  Comparing numeric and character minor version, ESMF_UtilUTest.F90, line 
3: 164
0:  PASS  Comparing numeric and character revision, ESMF_UtilUTest.F90, line 179
1:  PASS  Comparing numeric and character revision, ESMF_UtilUTest.F90, line 179
2:  PASS  Comparing numeric and character revision, ESMF_UtilUTest.F90, line 179
1:  PASS  No arg VersionPrint test, ESMF_UtilUTest.F90, line 191
2:  PASS  No arg VersionPrint test, ESMF_UtilUTest.F90, line 191
3:  PASS  Comparing numeric and character revision, ESMF_UtilUTest.F90, line 179
3:  PASS  No arg VersionPrint test, ESMF_UtilUTest.F90, line 191
0:  PASS  No arg VersionPrint test, ESMF_UtilUTest.F90, line 191
0:   ESMF_VERSION_STRING:       8.4.0 beta snapshot
1:   ESMF_VERSION_STRING:       8.4.0 beta snapshot
1:  PASS  One line VersionPrint test, ESMF_UtilUTest.F90, line 199
0:  PASS  One line VersionPrint test, ESMF_UtilUTest.F90, line 199
2:   ESMF_VERSION_STRING:       8.4.0 beta snapshot
2:  PASS  One line VersionPrint test, ESMF_UtilUTest.F90, line 199
3:   ESMF_VERSION_STRING:       8.4.0 beta snapshot
3:  PASS  One line VersionPrint test, ESMF_UtilUTest.F90, line 199
0:   ESMF_VERSION_STRING:       8.4.0 beta snapshot
0:   ESMF_VERSION_STRING_GIT:   v8.4.0b01-4-gf4d45872d8
1:   ESMF_VERSION_STRING:       8.4.0 beta snapshot
1:   ESMF_VERSION_STRING_GIT:   v8.4.0b01-4-gf4d45872d8
1:   ESMF_VERSION_MAJOR:                   8
1:   ESMF_VERSION_MINOR:                   4
1:   ESMF_VERSION_REVISION:                0
1:   ESMF_VERSION_PATCHLEVEL:              0
2:   ESMF_VERSION_STRING:       8.4.0 beta snapshot
2:   ESMF_VERSION_STRING_GIT:   v8.4.0b01-4-gf4d45872d8
2:   ESMF_VERSION_MAJOR:                   8
2:   ESMF_VERSION_MINOR:                   4
2:   ESMF_VERSION_REVISION:                0
2:   ESMF_VERSION_PATCHLEVEL:              0
3:   ESMF_VERSION_STRING:       8.4.0 beta snapshot
3:   ESMF_VERSION_STRING_GIT:   v8.4.0b01-4-gf4d45872d8
3:   ESMF_VERSION_MAJOR:                   8
3:   ESMF_VERSION_MINOR:                   4
3:   ESMF_VERSION_REVISION:                0
3:   ESMF_VERSION_PATCHLEVEL:              0
3:   ESMF_VERSION_PUBLIC:        F
0:   ESMF_VERSION_MAJOR:                   8
0:   ESMF_VERSION_MINOR:                   4
0:   ESMF_VERSION_REVISION:                0
0:   ESMF_VERSION_PATCHLEVEL:              0
0:   ESMF_VERSION_PUBLIC:        F
0:   ESMF_VERSION_BETASNAPSHOT:  T
0: 
0: Earth System Modeling Framework
0: 
0: Copyright (c) 2002-2022 University Corporation for Atmospheric Research,
0: Massachusetts Institute of Technology, Geophysical Fluid Dynamics Laboratory,
0: University of Michigan, National Centers for Environmental Prediction,
0: Los Alamos National Laboratory, Argonne National Laboratory,
0: NASA Goddard Space Flight Center.
0: All rights reserved.
0: 
0: Permission is hereby granted, free of charge, to any person obtaining a copy
0: of this software and associated documentation files (the 'Software'), to
0: deal with the Software without restriction, including without limitation the
0: rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
0: sell copies of the Software, and to permit persons to whom the Software is
0: furnished to do so, subject to the following conditions:
0:    1. Redistributions of source code must retain the above copyright notice,
0:       this list of conditions and the following disclaimers.
1:   ESMF_VERSION_PUBLIC:        F
1:   ESMF_VERSION_BETASNAPSHOT:  T
1: 
1: Earth System Modeling Framework
1: 
1: Copyright (c) 2002-2022 University Corporation for Atmospheric Research,
1: Massachusetts Institute of Technology, Geophysical Fluid Dynamics Laboratory,
1: University of Michigan, National Centers for Environmental Prediction,
1: Los Alamos National Laboratory, Argonne National Laboratory,
1: NASA Goddard Space Flight Center.
1: All rights reserved.
1: 
1: Permission is hereby granted, free of charge, to any person obtaining a copy
1: of this software and associated documentation files (the 'Software'), to
1: deal with the Software without restriction, including without limitation the
1: rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
1: sell copies of the Software, and to permit persons to whom the Software is
1: furnished to do so, subject to the following conditions:
1:    1. Redistributions of source code must retain the above copyright notice,
1:       this list of conditions and the following disclaimers.
1:    2. Redistributions in binary form must reproduce the above copyright
1:       notice, this list of conditions and the following disclaimers in the
1:       documentation and/or other materials provided with the distribution.
1:    3. Neither the names of the organizations developing this software, nor
1:       the names of its contributors may be used to endorse or promote products
1:       derived from this Software without specific prior written permission.
1: 
2:   ESMF_VERSION_PUBLIC:        F
2:   ESMF_VERSION_BETASNAPSHOT:  T
2: 
2: Earth System Modeling Framework
2: 
2: Copyright (c) 2002-2022 University Corporation for Atmospheric Research,
2: Massachusetts Institute of Technology, Geophysical Fluid Dynamics Laboratory,
2: University of Michigan, National Centers for Environmental Prediction,
2: Los Alamos National Laboratory, Argonne National Laboratory,
2: NASA Goddard Space Flight Center.
2: All rights reserved.
2: 
2: Permission is hereby granted, free of charge, to any person obtaining a copy
2: of this software and associated documentation files (the 'Software'), to
2: deal with the Software without restriction, including without limitation the
2: rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
2: sell copies of the Software, and to permit persons to whom the Software is
2: furnished to do so, subject to the following conditions:
2:    1. Redistributions of source code must retain the above copyright notice,
2:       this list of conditions and the following disclaimers.
2:    2. Redistributions in binary form must reproduce the above copyright
2:       notice, this list of conditions and the following disclaimers in the
2:       documentation and/or other materials provided with the distribution.
2:    3. Neither the names of the organizations developing this software, nor
2:       the names of its contributors may be used to endorse or promote products
2:       derived from this Software without specific prior written permission.
2: 
2: THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
2: IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
2: FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
3:   ESMF_VERSION_BETASNAPSHOT:  T
3: 
3: Earth System Modeling Framework
3: 
3: Copyright (c) 2002-2022 University Corporation for Atmospheric Research,
3: Massachusetts Institute of Technology, Geophysical Fluid Dynamics Laboratory,
3: University of Michigan, National Centers for Environmental Prediction,
3: Los Alamos National Laboratory, Argonne National Laboratory,
3: NASA Goddard Space Flight Center.
3: All rights reserved.
3: 
3: Permission is hereby granted, free of charge, to any person obtaining a copy
3: of this software and associated documentation files (the 'Software'), to
3: deal with the Software without restriction, including without limitation the
3: rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
3: sell copies of the Software, and to permit persons to whom the Software is
3: furnished to do so, subject to the following conditions:
3:    1. Redistributions of source code must retain the above copyright notice,
3:       this list of conditions and the following disclaimers.
3:    2. Redistributions in binary form must reproduce the above copyright
3:       notice, this list of conditions and the following disclaimers in the
3:       documentation and/or other materials provided with the distribution.
3:    3. Neither the names of the organizations developing this software, nor
3:       the names of its contributors may be used to endorse or promote products
3:       derived from this Software without specific prior written permission.
3: 
3: THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
3: IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
3: FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
3: CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
3: LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
3: FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
3: WITH THE SOFTWARE.
0:    2. Redistributions in binary form must reproduce the above copyright
0:       notice, this list of conditions and the following disclaimers in the
0:       documentation and/or other materials provided with the distribution.
0:    3. Neither the names of the organizations developing this software, nor
0:       the names of its contributors may be used to endorse or promote products
0:       derived from this Software without specific prior written permission.
0: 
0: THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
0: IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
0: FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
0: CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
0: LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
0: FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
0: WITH THE SOFTWARE.
0:  PASS  Multi-line VersionPrint test, ESMF_UtilUTest.F90, line 207
1: THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
1: IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
1: FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
1: CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
1: LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
1: FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
1: WITH THE SOFTWARE.
1:  PASS  Multi-line VersionPrint test, ESMF_UtilUTest.F90, line 207
2: CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
2: LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
2: FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
2: WITH THE SOFTWARE.
2:  PASS  Multi-line VersionPrint test, ESMF_UtilUTest.F90, line 207
3:  PASS  Multi-line VersionPrint test, ESMF_UtilUTest.F90, line 207
3:   ESMF_VERSION_STRING:       8.4.0 beta snapshot
3: 
3:   ESMF_VERSION_STRING:       8.4.0 beta snapshot
3:   ESMF_VERSION_STRING_GIT:   v8.4.0b01-4-gf4d45872d8
0:   ESMF_VERSION_STRING:       8.4.0 beta snapshot
0: 
0:   ESMF_VERSION_STRING:       8.4.0 beta snapshot
0:   ESMF_VERSION_STRING_GIT:   v8.4.0b01-4-gf4d45872d8
0:   ESMF_VERSION_MAJOR:                   8
0:   ESMF_VERSION_MINOR:                   4
0:   ESMF_VERSION_REVISION:                0
0:   ESMF_VERSION_PATCHLEVEL:              0
0:   ESMF_VERSION_PUBLIC:        F
0:   ESMF_VERSION_BETASNAPSHOT:  T
0: 
0: Earth System Modeling Framework
0: 
0: Copyright (c) 2002-2022 University Corporation for Atmospheric Research,
1:   ESMF_VERSION_STRING:       8.4.0 beta snapshot
1: 
1:   ESMF_VERSION_STRING:       8.4.0 beta snapshot
1:   ESMF_VERSION_STRING_GIT:   v8.4.0b01-4-gf4d45872d8
1:   ESMF_VERSION_MAJOR:                   8
1:   ESMF_VERSION_MINOR:                   4
1:   ESMF_VERSION_REVISION:                0
1:   ESMF_VERSION_PATCHLEVEL:              0
1:   ESMF_VERSION_PUBLIC:        F
1:   ESMF_VERSION_BETASNAPSHOT:  T
1: 
1: Earth System Modeling Framework
1: 
1: Copyright (c) 2002-2022 University Corporation for Atmospheric Research,
1: Massachusetts Institute of Technology, Geophysical Fluid Dynamics Laboratory,
1: University of Michigan, National Centers for Environmental Prediction,
1: Los Alamos National Laboratory, Argonne National Laboratory,
1: NASA Goddard Space Flight Center.
1: All rights reserved.
1: 
2:   ESMF_VERSION_STRING:       8.4.0 beta snapshot
2: 
2:   ESMF_VERSION_STRING:       8.4.0 beta snapshot
2:   ESMF_VERSION_STRING_GIT:   v8.4.0b01-4-gf4d45872d8
2:   ESMF_VERSION_MAJOR:                   8
2:   ESMF_VERSION_MINOR:                   4
2:   ESMF_VERSION_REVISION:                0
2:   ESMF_VERSION_PATCHLEVEL:              0
2:   ESMF_VERSION_PUBLIC:        F
2:   ESMF_VERSION_BETASNAPSHOT:  T
2: 
2: Earth System Modeling Framework
2: 
2: Copyright (c) 2002-2022 University Corporation for Atmospheric Research,
2: Massachusetts Institute of Technology, Geophysical Fluid Dynamics Laboratory,
2: University of Michigan, National Centers for Environmental Prediction,
2: Los Alamos National Laboratory, Argonne National Laboratory,
2: NASA Goddard Space Flight Center.
2: All rights reserved.
2: 
2: Permission is hereby granted, free of charge, to any person obtaining a copy
2: of this software and associated documentation files (the 'Software'), to
3:   ESMF_VERSION_MAJOR:                   8
3:   ESMF_VERSION_MINOR:                   4
3:   ESMF_VERSION_REVISION:                0
3:   ESMF_VERSION_PATCHLEVEL:              0
3:   ESMF_VERSION_PUBLIC:        F
3:   ESMF_VERSION_BETASNAPSHOT:  T
3: 
3: Earth System Modeling Framework
3: 
3: Copyright (c) 2002-2022 University Corporation for Atmospheric Research,
3: Massachusetts Institute of Technology, Geophysical Fluid Dynamics Laboratory,
3: University of Michigan, National Centers for Environmental Prediction,
3: Los Alamos National Laboratory, Argonne National Laboratory,
3: NASA Goddard Space Flight Center.
3: All rights reserved.
3: 
3: Permission is hereby granted, free of charge, to any person obtaining a copy
3: of this software and associated documentation files (the 'Software'), to
3: deal with the Software without restriction, including without limitation the
3: rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
3: sell copies of the Software, and to permit persons to whom the Software is
3: furnished to do so, subject to the following conditions:
3:    1. Redistributions of source code must retain the above copyright notice,
3:       this list of conditions and the following disclaimers.
0: Massachusetts Institute of Technology, Geophysical Fluid Dynamics Laboratory,
0: University of Michigan, National Centers for Environmental Prediction,
0: Los Alamos National Laboratory, Argonne National Laboratory,
0: NASA Goddard Space Flight Center.
0: All rights reserved.
0: 
0: Permission is hereby granted, free of charge, to any person obtaining a copy
0: of this software and associated documentation files (the 'Software'), to
0: deal with the Software without restriction, including without limitation the
0: rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
0: sell copies of the Software, and to permit persons to whom the Software is
0: furnished to do so, subject to the following conditions:
0:    1. Redistributions of source code must retain the above copyright notice,
0:       this list of conditions and the following disclaimers.
0:    2. Redistributions in binary form must reproduce the above copyright
0:       notice, this list of conditions and the following disclaimers in the
0:       documentation and/or other materials provided with the distribution.
0:    3. Neither the names of the organizations developing this software, nor
0:       the names of its contributors may be used to endorse or promote products
0:       derived from this Software without specific prior written permission.
0: 
0: THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
0: IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
1: Permission is hereby granted, free of charge, to any person obtaining a copy
1: of this software and associated documentation files (the 'Software'), to
1: deal with the Software without restriction, including without limitation the
1: rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
1: sell copies of the Software, and to permit persons to whom the Software is
1: furnished to do so, subject to the following conditions:
1:    1. Redistributions of source code must retain the above copyright notice,
1:       this list of conditions and the following disclaimers.
1:    2. Redistributions in binary form must reproduce the above copyright
1:       notice, this list of conditions and the following disclaimers in the
1:       documentation and/or other materials provided with the distribution.
1:    3. Neither the names of the organizations developing this software, nor
1:       the names of its contributors may be used to endorse or promote products
1:       derived from this Software without specific prior written permission.
1: 
1: THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
1: IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
1: FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
1: CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
1: LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
1: FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
1: WITH THE SOFTWARE.
2: deal with the Software without restriction, including without limitation the
2: rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
2: sell copies of the Software, and to permit persons to whom the Software is
2: furnished to do so, subject to the following conditions:
2:    1. Redistributions of source code must retain the above copyright notice,
2:       this list of conditions and the following disclaimers.
2:    2. Redistributions in binary form must reproduce the above copyright
2:       notice, this list of conditions and the following disclaimers in the
2:       documentation and/or other materials provided with the distribution.
2:    3. Neither the names of the organizations developing this software, nor
2:       the names of its contributors may be used to endorse or promote products
2:       derived from this Software without specific prior written permission.
2: 
2: THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
2: IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
2: FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
2: CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
2: LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
2: FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
2: WITH THE SOFTWARE.
2:  PASS  Single and multi-line VersionPrint test, ESMF_UtilUTest.F90, line 215
3:    2. Redistributions in binary form must reproduce the above copyright
3:       notice, this list of conditions and the following disclaimers in the
3:       documentation and/or other materials provided with the distribution.
3:    3. Neither the names of the organizations developing this software, nor
3:       the names of its contributors may be used to endorse or promote products
3:       derived from this Software without specific prior written permission.
3: 
3: THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
3: IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
3: FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
3: CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
3: LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
3: FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
3: WITH THE SOFTWARE.
3:  PASS  Single and multi-line VersionPrint test, ESMF_UtilUTest.F90, line 215
0: FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
0: CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
0: LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
0: FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
0: WITH THE SOFTWARE.
0:  PASS  Single and multi-line VersionPrint test, ESMF_UtilUTest.F90, line 215
1:  PASS  Single and multi-line VersionPrint test, ESMF_UtilUTest.F90, line 215
0:  PASS  Testing ESMF_UtilIOUnitGet, obtaining and opening units, ESMF_UtilUTest.
0: F90, line 240
1:  PASS  Testing ESMF_UtilIOUnitGet, obtaining and opening units, ESMF_UtilUTest.
1: F90, line 240
2:  PASS  Testing ESMF_UtilIOUnitGet, obtaining and opening units, ESMF_UtilUTest.
2: F90, line 240
3:  PASS  Testing ESMF_UtilIOUnitGet, obtaining and opening units, ESMF_UtilUTest.
3: F90, line 240
0:  PASS  Testing ESMF_UtilIOUnitFlush, get a free unit, ESMF_UtilUTest.F90, line 
0: 257
1:  PASS  Testing ESMF_UtilIOUnitFlush, get a free unit, ESMF_UtilUTest.F90, line 
1: 257
0:  PASS  ESMF_UtilIOUnitFlush, open scratch file: IOtempfile_00, ESMF_UtilUTest.F
0: 90, line 266
0:  PASS  ESMF_UtilIOUnitFlush, flush the scratch file, ESMF_UtilUTest.F90, line 2
0: 75
2:  PASS  Testing ESMF_UtilIOUnitFlush, get a free unit, ESMF_UtilUTest.F90, line 
2: 257
1:  PASS  ESMF_UtilIOUnitFlush, open scratch file: IOtempfile_01, ESMF_UtilUTest.F
1: 90, line 266
1:  PASS  ESMF_UtilIOUnitFlush, flush the scratch file, ESMF_UtilUTest.F90, line 2
1: 75
0:  PASS  Testing ESMF_UtilGetArgC, command line argument count, ESMF_UtilUTest.F9
0: 0, line 290
0:  PASS  Testing ESMF_UtilGetArgC, command line argument count value, ESMF_UtilUT
0: est.F90, line 297
2:  PASS  ESMF_UtilIOUnitFlush, open scratch file: IOtempfile_02, ESMF_UtilUTest.F
2: 90, line 266
0:  PASS  Testing ESMF_UtilGetArgC, argindex < 0, ESMF_UtilUTest.F90, line 305
0: command name = ./ESMF_UtilUTest
0:  PASS  Testing ESMF_UtilGetArgC, get command name, ESMF_UtilUTest.F90, line 314
2:  PASS  ESMF_UtilIOUnitFlush, flush the scratch file, ESMF_UtilUTest.F90, line 2
2: 75
0:  PASS  Testing ESMF_UtilGetArgC, get truncated command name, ESMF_UtilUTest.F90
0: , line 322
0: arg_len =          16 , len_trim (arg) =          16
0:  PASS  Testing ESMF_UtilGetArgC, compare arg lengths, ESMF_UtilUTest.F90, line 
0: 332
3:  PASS  Testing ESMF_UtilIOUnitFlush, get a free unit, ESMF_UtilUTest.F90, line 
3: 257
1:  PASS  Testing ESMF_UtilGetArgC, command line argument count, ESMF_UtilUTest.F9
1: 0, line 290
1:  PASS  Testing ESMF_UtilGetArgC, command line argument count value, ESMF_UtilUT
1: est.F90, line 297
2:  PASS  Testing ESMF_UtilGetArgC, command line argument count, ESMF_UtilUTest.F9
2: 0, line 290
1:  PASS  Testing ESMF_UtilGetArgC, argindex < 0, ESMF_UtilUTest.F90, line 305
2:  PASS  Testing ESMF_UtilGetArgC, command line argument count value, ESMF_UtilUT
2: est.F90, line 297
1: command name = ./ESMF_UtilUTest
1:  PASS  Testing ESMF_UtilGetArgC, get command name, ESMF_UtilUTest.F90, line 314
1:  PASS  Testing ESMF_UtilGetArgC, get truncated command name, ESMF_UtilUTest.F90
1: , line 322
3:  PASS  ESMF_UtilIOUnitFlush, open scratch file: IOtempfile_03, ESMF_UtilUTest.F
3: 90, line 266
1: arg_len =          16 , len_trim (arg) =          16
2:  PASS  Testing ESMF_UtilGetArgC, argindex < 0, ESMF_UtilUTest.F90, line 305
2: command name = ./ESMF_UtilUTest
2:  PASS  Testing ESMF_UtilGetArgC, get command name, ESMF_UtilUTest.F90, line 314
1:  PASS  Testing ESMF_UtilGetArgC, compare arg lengths, ESMF_UtilUTest.F90, line 
1: 332
2:  PASS  Testing ESMF_UtilGetArgC, get truncated command name, ESMF_UtilUTest.F90
2: , line 322
2: arg_len =          16 , len_trim (arg) =          16
2:  PASS  Testing ESMF_UtilGetArgC, compare arg lengths, ESMF_UtilUTest.F90, line 
2: 332
3:  PASS  ESMF_UtilIOUnitFlush, flush the scratch file, ESMF_UtilUTest.F90, line 2
3: 75
3:  PASS  Testing ESMF_UtilGetArgC, command line argument count, ESMF_UtilUTest.F9
3: 0, line 290
3:  PASS  Testing ESMF_UtilGetArgC, command line argument count value, ESMF_UtilUT
3: est.F90, line 297
3:  PASS  Testing ESMF_UtilGetArgC, argindex < 0, ESMF_UtilUTest.F90, line 305
3: command name = ./ESMF_UtilUTest
3:  PASS  Testing ESMF_UtilGetArgC, get command name, ESMF_UtilUTest.F90, line 314
3:  PASS  Testing ESMF_UtilGetArgC, get truncated command name, ESMF_UtilUTest.F90
3: , line 322
3: arg_len =          16 , len_trim (arg) =          16
3:  PASS  Testing ESMF_UtilGetArgC, compare arg lengths, ESMF_UtilUTest.F90, line 
3: 332
2:  PASS  Testing ESMF_UtilGetArgC, argindex > nargs, ESMF_UtilUTest.F90, line 342
2:  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 
2: 351
2:  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 
2: 360
2:  PASS  Testing ascending real sort, ESMF_UtilUTest.F90, line 375
2:  PASS  Testing sorted ascending real results, ESMF_UtilUTest.F90, line 389
2:  PASS  Testing descending real sort, ESMF_UtilUTest.F90, line 398
2:  PASS  Testing sorted descending real results, ESMF_UtilUTest.F90, line 412
2:  PASS  Testing ascending double precision real sort, ESMF_UtilUTest.F90, line 4
2: 23
2:  PASS  Testing sorted ascending double precision real results, ESMF_UtilUTest.F
2: 90, line 437
2:  PASS  Testing descending double precision real sort, ESMF_UtilUTest.F90, line 
2: 446
2:  PASS  Testing sorted descending double precision real results, ESMF_UtilUTest.
2: F90, line 460
2:  PASS  Testing ascending integer sort, ESMF_UtilUTest.F90, line 471
2:  PASS  Testing sorted ascending integer results, ESMF_UtilUTest.F90, line 486
2:  PASS  Testing descending integer sort, ESMF_UtilUTest.F90, line 495
2:  PASS  Testing sorted descending integer results, ESMF_UtilUTest.F90, line 510
2:  PASS  Testing ascending double integer sort, ESMF_UtilUTest.F90, line 521
2:  PASS  Testing sorted ascending double integer results, ESMF_UtilUTest.F90, lin
2: e 536
2:  PASS  Testing descending double integer sort, ESMF_UtilUTest.F90, line 545
2:  PASS  Testing sorted descending double integer results, ESMF_UtilUTest.F90, li
2: ne 560
2:  PASS  Testing ascending character string sort, ESMF_UtilUTest.F90, line 571
2:  PASS  Testing sorted ascending character string results, ESMF_UtilUTest.F90, l
2: ine 583
2:  PASS  Testing descending character string sort, ESMF_UtilUTest.F90, line 592
2:  PASS  Testing sorted descending character string results, ESMF_UtilUTest.F90, 
2: line 604
1:  PASS  Testing ESMF_UtilGetArgC, argindex > nargs, ESMF_UtilUTest.F90, line 342
1:  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 
1: 351
0:  PASS  Testing ESMF_UtilGetArgC, argindex > nargs, ESMF_UtilUTest.F90, line 342
1:  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 
1: 360
0:  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 
0: 351
1:  PASS  Testing ascending real sort, ESMF_UtilUTest.F90, line 375
0:  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 
0: 360
1:  PASS  Testing sorted ascending real results, ESMF_UtilUTest.F90, line 389
1:  PASS  Testing descending real sort, ESMF_UtilUTest.F90, line 398
0:  PASS  Testing ascending real sort, ESMF_UtilUTest.F90, line 375
1:  PASS  Testing sorted descending real results, ESMF_UtilUTest.F90, line 412
0:  PASS  Testing sorted ascending real results, ESMF_UtilUTest.F90, line 389
1:  PASS  Testing ascending double precision real sort, ESMF_UtilUTest.F90, line 4
1: 23
0:  PASS  Testing descending real sort, ESMF_UtilUTest.F90, line 398
1:  PASS  Testing sorted ascending double precision real results, ESMF_UtilUTest.F
1: 90, line 437
0:  PASS  Testing sorted descending real results, ESMF_UtilUTest.F90, line 412
1:  PASS  Testing descending double precision real sort, ESMF_UtilUTest.F90, line 
1: 446
0:  PASS  Testing ascending double precision real sort, ESMF_UtilUTest.F90, line 4
0: 23
1:  PASS  Testing sorted descending double precision real results, ESMF_UtilUTest.
1: F90, line 460
0:  PASS  Testing sorted ascending double precision real results, ESMF_UtilUTest.F
0: 90, line 437
0:  PASS  Testing descending double precision real sort, ESMF_UtilUTest.F90, line 
0: 446
1:  PASS  Testing ascending integer sort, ESMF_UtilUTest.F90, line 471
0:  PASS  Testing sorted descending double precision real results, ESMF_UtilUTest.
0: F90, line 460
1:  PASS  Testing sorted ascending integer results, ESMF_UtilUTest.F90, line 486
0:  PASS  Testing ascending integer sort, ESMF_UtilUTest.F90, line 471
1:  PASS  Testing descending integer sort, ESMF_UtilUTest.F90, line 495
0:  PASS  Testing sorted ascending integer results, ESMF_UtilUTest.F90, line 486
1:  PASS  Testing sorted descending integer results, ESMF_UtilUTest.F90, line 510
0:  PASS  Testing descending integer sort, ESMF_UtilUTest.F90, line 495
1:  PASS  Testing ascending double integer sort, ESMF_UtilUTest.F90, line 521
0:  PASS  Testing sorted descending integer results, ESMF_UtilUTest.F90, line 510
1:  PASS  Testing sorted ascending double integer results, ESMF_UtilUTest.F90, lin
1: e 536
0:  PASS  Testing ascending double integer sort, ESMF_UtilUTest.F90, line 521
1:  PASS  Testing descending double integer sort, ESMF_UtilUTest.F90, line 545
0:  PASS  Testing sorted ascending double integer results, ESMF_UtilUTest.F90, lin
0: e 536
1:  PASS  Testing sorted descending double integer results, ESMF_UtilUTest.F90, li
1: ne 560
0:  PASS  Testing descending double integer sort, ESMF_UtilUTest.F90, line 545
1:  PASS  Testing ascending character string sort, ESMF_UtilUTest.F90, line 571
0:  PASS  Testing sorted descending double integer results, ESMF_UtilUTest.F90, li
0: ne 560
1:  PASS  Testing sorted ascending character string results, ESMF_UtilUTest.F90, l
1: ine 583
0:  PASS  Testing ascending character string sort, ESMF_UtilUTest.F90, line 571
1:  PASS  Testing descending character string sort, ESMF_UtilUTest.F90, line 592
0:  PASS  Testing sorted ascending character string results, ESMF_UtilUTest.F90, l
0: ine 583
1:  PASS  Testing sorted descending character string results, ESMF_UtilUTest.F90, 
1: line 604
2:  PASS  Testing creating a directory, ESMF_UtilUTest.F90, line 618
0:  PASS  Testing descending character string sort, ESMF_UtilUTest.F90, line 592
0:  PASS  Testing sorted descending character string results, ESMF_UtilUTest.F90, 
0: line 604
2:  PASS  Testing creating a directory which already exists, ESMF_UtilUTest.F90, l
2: ine 626
2:  PASS  Testing creating a directory which already exists w/relaxedFlag, ESMF_Ut
2: ilUTest.F90, line 634
1:  PASS  Testing creating a directory, ESMF_UtilUTest.F90, line 618
0:  PASS  Testing creating a directory, ESMF_UtilUTest.F90, line 618
2:  PASS  Testing removing a directory, ESMF_UtilUTest.F90, line 642
0:  PASS  Testing creating a directory which already exists, ESMF_UtilUTest.F90, l
0: ine 626
1:  PASS  Testing creating a directory which already exists, ESMF_UtilUTest.F90, l
1: ine 626
1:  PASS  Testing creating a directory which already exists w/relaxedFlag, ESMF_Ut
1: ilUTest.F90, line 634
2:  PASS  Testing removing a directory which does not exist, ESMF_UtilUTest.F90, l
2: ine 650
0:  PASS  Testing creating a directory which already exists w/relaxedFlag, ESMF_Ut
0: ilUTest.F90, line 634
2:  PASS  Testing removing a directory which does not exist, relaxed, ESMF_UtilUTe
2: st.F90, line 658
2:  PASS  Testing getting the current directory, ESMF_UtilUTest.F90, line 672
2: current directory name =>
2: /glade/scratch/dunlap/esmf-test-dev/intel_18.0.5_mpt_O_DusanJovic-NOAA_dev_info
2: _fix/esmf/test/testO/Linux.intel.64.mpt.default<
2:  PASS  Testing directory name for valid characters, ESMF_UtilUTest.F90, line 69
2: 1
1:  PASS  Testing removing a directory, ESMF_UtilUTest.F90, line 642
2:  PASS  Testing getting the current directory with small string, ESMF_UtilUTest.
2: F90, line 699
2:  PASS  Testing converting string to UPPER case, ESMF_UtilUTest.F90, line 711
2:  PASS  Testing converting string to lower case, ESMF_UtilUTest.F90, line 721
0:  PASS  Testing removing a directory, ESMF_UtilUTest.F90, line 642
2:  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtilUTest.F90, line 733
1:  PASS  Testing removing a directory which does not exist, ESMF_UtilUTest.F90, l
1: ine 650
2:  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtilUTest.F90, line 740
1:  PASS  Testing removing a directory which does not exist, relaxed, ESMF_UtilUTe
1: st.F90, line 658
2:  PASS  ESMF_UtilStringInt2String() - Test, ESMF_UtilUTest.F90, line 749
0:  PASS  Testing removing a directory which does not exist, ESMF_UtilUTest.F90, l
0: ine 650
2:  PASS  String -> Integer -> String conversion correctness - Test, ESMF_UtilUTes
2: t.F90, line 756
0:  PASS  Testing removing a directory which does not exist, relaxed, ESMF_UtilUTe
0: st.F90, line 658
1:  PASS  Testing getting the current directory, ESMF_UtilUTest.F90, line 672
2:  PASS  ESMF_UtilString2Int() - negative value - Test, ESMF_UtilUTest.F90, line 
2: 764
1: current directory name =>
1: /glade/scratch/dunlap/esmf-test-dev/intel_18.0.5_mpt_O_DusanJovic-NOAA_dev_info
1: _fix/esmf/test/testO/Linux.intel.64.mpt.default<
0:  PASS  Testing getting the current directory, ESMF_UtilUTest.F90, line 672
1:  PASS  Testing directory name for valid characters, ESMF_UtilUTest.F90, line 69
1: 1
0: current directory name =>
0: /glade/scratch/dunlap/esmf-test-dev/intel_18.0.5_mpt_O_DusanJovic-NOAA_dev_info
0: _fix/esmf/test/testO/Linux.intel.64.mpt.default<
2:  PASS  ESMF_UtilString2Int() - negative value - Test, ESMF_UtilUTest.F90, line 
2: 771
0:  PASS  Testing directory name for valid characters, ESMF_UtilUTest.F90, line 69
0: 1
2:  PASS  ESMF_UtilString2Int() - explicit positive value - Test, ESMF_UtilUTest.F
2: 90, line 779
1:  PASS  Testing getting the current directory with small string, ESMF_UtilUTest.
1: F90, line 699
2:  PASS  ESMF_UtilString2Int() - explicit positive value - Test, ESMF_UtilUTest.F
2: 90, line 786
1:  PASS  Testing converting string to UPPER case, ESMF_UtilUTest.F90, line 711
0:  PASS  Testing getting the current directory with small string, ESMF_UtilUTest.
0: F90, line 699
2:  PASS  ESMF_UtilString2Int() - leading blanks - Test, ESMF_UtilUTest.F90, line 
2: 794
1:  PASS  Testing converting string to lower case, ESMF_UtilUTest.F90, line 721
0:  PASS  Testing converting string to UPPER case, ESMF_UtilUTest.F90, line 711
2:  PASS  ESMF_UtilString2Int() - leading blanks - Test, ESMF_UtilUTest.F90, line 
2: 801
3:  PASS  Testing ESMF_UtilGetArgC, argindex > nargs, ESMF_UtilUTest.F90, line 342
0:  PASS  Testing converting string to lower case, ESMF_UtilUTest.F90, line 721
1:  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtilUTest.F90, line 733
2:  PASS  ESMF_UtilString2Int() - trailing blanks - Test, ESMF_UtilUTest.F90, line
2:  809
2:  PASS  ESMF_UtilString2Int() - trailing blanks - Test, ESMF_UtilUTest.F90, line
2:  816
3:  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 
3: 351
0:  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtilUTest.F90, line 733
1:  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtilUTest.F90, line 740
0:  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtilUTest.F90, line 740
1:  PASS  ESMF_UtilStringInt2String() - Test, ESMF_UtilUTest.F90, line 749
3:  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 
3: 360
0:  PASS  ESMF_UtilStringInt2String() - Test, ESMF_UtilUTest.F90, line 749
1:  PASS  String -> Integer -> String conversion correctness - Test, ESMF_UtilUTes
1: t.F90, line 756
2:  PASS  ESMF_UtilString2Int() - special string missing - Test, ESMF_UtilUTest.F9
2: 0, line 826
2:  PASS  ESMF_UtilString2Int() - special string - Test, ESMF_UtilUTest.F90, line 
2: 836
3:  PASS  Testing ascending real sort, ESMF_UtilUTest.F90, line 375
3:  PASS  Testing sorted ascending real results, ESMF_UtilUTest.F90, line 389
0:  PASS  String -> Integer -> String conversion correctness - Test, ESMF_UtilUTes
0: t.F90, line 756
1:  PASS  ESMF_UtilString2Int() - negative value - Test, ESMF_UtilUTest.F90, line 
1: 764
2:  PASS  ESMF_UtilString2Int() - special string - Test, ESMF_UtilUTest.F90, line 
2: 843
1:  PASS  ESMF_UtilString2Int() - negative value - Test, ESMF_UtilUTest.F90, line 
1: 771
3:  PASS  Testing descending real sort, ESMF_UtilUTest.F90, line 398
0:  PASS  ESMF_UtilString2Int() - negative value - Test, ESMF_UtilUTest.F90, line 
0: 764
3:  PASS  Testing sorted descending real results, ESMF_UtilUTest.F90, line 412
0:  PASS  ESMF_UtilString2Int() - negative value - Test, ESMF_UtilUTest.F90, line 
0: 771
1:  PASS  ESMF_UtilString2Int() - explicit positive value - Test, ESMF_UtilUTest.F
1: 90, line 779
1:  PASS  ESMF_UtilString2Int() - explicit positive value - Test, ESMF_UtilUTest.F
1: 90, line 786
2:  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.F90, line 856
3:  PASS  Testing ascending double precision real sort, ESMF_UtilUTest.F90, line 4
3: 23
3:  PASS  Testing sorted ascending double precision real results, ESMF_UtilUTest.F
0:  PASS  ESMF_UtilString2Int() - explicit positive value - Test, ESMF_UtilUTest.F
0: 90, line 779
1:  PASS  ESMF_UtilString2Int() - leading blanks - Test, ESMF_UtilUTest.F90, line 
1: 794
3: 90, line 437
3:  PASS  Testing descending double precision real sort, ESMF_UtilUTest.F90, line 
3: 446
0:  PASS  ESMF_UtilString2Int() - explicit positive value - Test, ESMF_UtilUTest.F
0: 90, line 786
0:  PASS  ESMF_UtilString2Int() - leading blanks - Test, ESMF_UtilUTest.F90, line 
1:  PASS  ESMF_UtilString2Int() - leading blanks - Test, ESMF_UtilUTest.F90, line 
1: 801
2:  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.F90, line 863
2:  PASS  ESMF_UtilString2Real() - negative value - Test, ESMF_UtilUTest.F90, line
2:  871
0: 794
0:  PASS  ESMF_UtilString2Int() - leading blanks - Test, ESMF_UtilUTest.F90, line 
0: 801
1:  PASS  ESMF_UtilString2Int() - trailing blanks - Test, ESMF_UtilUTest.F90, line
1:  809
2:  PASS  ESMF_UtilString2Real() - negative value - Test, ESMF_UtilUTest.F90, line
2:  878
3:  PASS  Testing sorted descending double precision real results, ESMF_UtilUTest.
3: F90, line 460
3:  PASS  Testing ascending integer sort, ESMF_UtilUTest.F90, line 471
0:  PASS  ESMF_UtilString2Int() - trailing blanks - Test, ESMF_UtilUTest.F90, line
0:  809
1:  PASS  ESMF_UtilString2Int() - trailing blanks - Test, ESMF_UtilUTest.F90, line
1:  816
2:  PASS  ESMF_UtilString2Real() - explicit positive value - Test, ESMF_UtilUTest.
2: F90, line 886
0:  PASS  ESMF_UtilString2Int() - trailing blanks - Test, ESMF_UtilUTest.F90, line
0:  816
3:  PASS  Testing sorted ascending integer results, ESMF_UtilUTest.F90, line 486
3:  PASS  Testing descending integer sort, ESMF_UtilUTest.F90, line 495
1:  PASS  ESMF_UtilString2Int() - special string missing - Test, ESMF_UtilUTest.F9
1: 0, line 826
2:  PASS  ESMF_UtilString2Real() - explicit positive value - Test, ESMF_UtilUTest.
2: F90, line 893
1:  PASS  ESMF_UtilString2Int() - special string - Test, ESMF_UtilUTest.F90, line 
1: 836
3:  PASS  Testing sorted descending integer results, ESMF_UtilUTest.F90, line 510
0:  PASS  ESMF_UtilString2Int() - special string missing - Test, ESMF_UtilUTest.F9
0: 0, line 826
1:  PASS  ESMF_UtilString2Int() - special string - Test, ESMF_UtilUTest.F90, line 
1: 843
2:  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
2:  901
2:  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
2:  908
3:  PASS  Testing ascending double integer sort, ESMF_UtilUTest.F90, line 521
3:  PASS  Testing sorted ascending double integer results, ESMF_UtilUTest.F90, lin
3: e 536
0:  PASS  ESMF_UtilString2Int() - special string - Test, ESMF_UtilUTest.F90, line 
0: 836
0:  PASS  ESMF_UtilString2Int() - special string - Test, ESMF_UtilUTest.F90, line 
0: 843
2:  PASS  ESMF_UtilString2Real() - trailing blanks - Test, ESMF_UtilUTest.F90, lin
2: e 916
1:  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.F90, line 856
3:  PASS  Testing descending double integer sort, ESMF_UtilUTest.F90, line 545
1:  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.F90, line 863
2:  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
2:  923
3:  PASS  Testing sorted descending double integer results, ESMF_UtilUTest.F90, li
3: ne 560
0:  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.F90, line 856
1:  PASS  ESMF_UtilString2Real() - negative value - Test, ESMF_UtilUTest.F90, line
1:  871
3:  PASS  Testing ascending character string sort, ESMF_UtilUTest.F90, line 571
0:  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.F90, line 863
1:  PASS  ESMF_UtilString2Real() - negative value - Test, ESMF_UtilUTest.F90, line
1:  878
2:  PASS  ESMF_UtilString2Double() - no blanks - Test, ESMF_UtilUTest.F90, line 93
2: 6
3:  PASS  Testing sorted ascending character string results, ESMF_UtilUTest.F90, l
3: ine 583
3:  PASS  Testing descending character string sort, ESMF_UtilUTest.F90, line 592
0:  PASS  ESMF_UtilString2Real() - negative value - Test, ESMF_UtilUTest.F90, line
0:  871
0:  PASS  ESMF_UtilString2Real() - negative value - Test, ESMF_UtilUTest.F90, line
0:  878
1:  PASS  ESMF_UtilString2Real() - explicit positive value - Test, ESMF_UtilUTest.
1: F90, line 886
2:  PASS  ESMF_UtilString2Double() - no blanks - Test, ESMF_UtilUTest.F90, line 94
2: 3
2:  PASS  ESMF_UtilString2Double() - negative value - Test, ESMF_UtilUTest.F90, li
2: ne 951
0:  PASS  ESMF_UtilString2Real() - explicit positive value - Test, ESMF_UtilUTest.
0: F90, line 886
1:  PASS  ESMF_UtilString2Real() - explicit positive value - Test, ESMF_UtilUTest.
1: F90, line 893
3:  PASS  Testing sorted descending character string results, ESMF_UtilUTest.F90, 
3: line 604
1:  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
1:  901
2:  PASS  ESMF_UtilString2Double() - negative value - Test, ESMF_UtilUTest.F90, li
2: ne 958
0:  PASS  ESMF_UtilString2Real() - explicit positive value - Test, ESMF_UtilUTest.
0: F90, line 893
1:  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
1:  908
2:  PASS  ESMF_UtilString2Double() - explicit positive value - Test, ESMF_UtilUTes
2: t.F90, line 966
2:  PASS  ESMF_UtilString2Double() - explicit positive value - Test, ESMF_UtilUTes
0:  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
0:  901
1:  PASS  ESMF_UtilString2Real() - trailing blanks - Test, ESMF_UtilUTest.F90, lin
1: e 916
2: t.F90, line 973
2:  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
2: ne 981
0:  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
0:  908
1:  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
1:  923
0:  PASS  ESMF_UtilString2Real() - trailing blanks - Test, ESMF_UtilUTest.F90, lin
0: e 916
2:  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
2: ne 988
0:  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
0:  923
1:  PASS  ESMF_UtilString2Double() - no blanks - Test, ESMF_UtilUTest.F90, line 93
1: 6
2:  PASS  ESMF_UtilString2Double() - trailing blanks - Test, ESMF_UtilUTest.F90, l
2: ine 996
1:  PASS  ESMF_UtilString2Double() - no blanks - Test, ESMF_UtilUTest.F90, line 94
1: 3
2:  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
2: ne 1003
0:  PASS  ESMF_UtilString2Double() - no blanks - Test, ESMF_UtilUTest.F90, line 93
0: 6
1:  PASS  ESMF_UtilString2Double() - negative value - Test, ESMF_UtilUTest.F90, li
1: ne 951
2:  PASS  Testing concatenating strings, ESMF_UtilUTest.F90, line 1016
3:  PASS  Testing creating a directory, ESMF_UtilUTest.F90, line 618
0:  PASS  ESMF_UtilString2Double() - no blanks - Test, ESMF_UtilUTest.F90, line 94
0: 3
1:  PASS  ESMF_UtilString2Double() - negative value - Test, ESMF_UtilUTest.F90, li
1: ne 958
0:  PASS  ESMF_UtilString2Double() - negative value - Test, ESMF_UtilUTest.F90, li
0: ne 951
2:  PASS  Testing converting C string to Fortran string, ESMF_UtilUTest.F90, line 
2: 1031
0:  PASS  ESMF_UtilString2Double() - negative value - Test, ESMF_UtilUTest.F90, li
0: ne 958
1:  PASS  ESMF_UtilString2Double() - explicit positive value - Test, ESMF_UtilUTes
1: t.F90, line 966
1:  PASS  ESMF_UtilString2Double() - explicit positive value - Test, ESMF_UtilUTes
1: t.F90, line 973
0:  PASS  ESMF_UtilString2Double() - explicit positive value - Test, ESMF_UtilUTes
0: t.F90, line 966
2:  PASS  Testing converting Fortran string to C string, ESMF_UtilUTest.F90, line 
2: 1047
3:  PASS  Testing creating a directory which already exists, ESMF_UtilUTest.F90, l
3: ine 626
3:  PASS  Testing creating a directory which already exists w/relaxedFlag, ESMF_Ut
3: ilUTest.F90, line 634
0:  PASS  ESMF_UtilString2Double() - explicit positive value - Test, ESMF_UtilUTes
0: t.F90, line 973
1:  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
1: ne 981
2:  Ending Test, file ESMF_UtilUTest.F90, line 1053
1:  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
1: ne 988
0:  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
0: ne 981
1:  PASS  ESMF_UtilString2Double() - trailing blanks - Test, ESMF_UtilUTest.F90, l
1: ine 996
0:  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
0: ne 988
1:  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
1: ne 1003
0:  PASS  ESMF_UtilString2Double() - trailing blanks - Test, ESMF_UtilUTest.F90, l
0: ine 996
1:  PASS  Testing concatenating strings, ESMF_UtilUTest.F90, line 1016
0:  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
0: ne 1003
1:  PASS  Testing converting C string to Fortran string, ESMF_UtilUTest.F90, line 
1: 1031
0:  PASS  Testing concatenating strings, ESMF_UtilUTest.F90, line 1016
1:  PASS  Testing converting Fortran string to C string, ESMF_UtilUTest.F90, line 
1: 1047
3:  PASS  Testing removing a directory, ESMF_UtilUTest.F90, line 642
0:  PASS  Testing converting C string to Fortran string, ESMF_UtilUTest.F90, line 
0: 1031
1:  Ending Test, file ESMF_UtilUTest.F90, line 1053
0:  PASS  Testing converting Fortran string to C string, ESMF_UtilUTest.F90, line 
0: 1047
0:  Ending Test, file ESMF_UtilUTest.F90, line 1053
3:  PASS  Testing removing a directory which does not exist, ESMF_UtilUTest.F90, l
3: ine 650
3:  PASS  Testing removing a directory which does not exist, relaxed, ESMF_UtilUTe
3: st.F90, line 658
3:  PASS  Testing getting the current directory, ESMF_UtilUTest.F90, line 672
3: current directory name =>
3: /glade/scratch/dunlap/esmf-test-dev/intel_18.0.5_mpt_O_DusanJovic-NOAA_dev_info
3: _fix/esmf/test/testO/Linux.intel.64.mpt.default<
3:  PASS  Testing directory name for valid characters, ESMF_UtilUTest.F90, line 69
3: 1
3:  PASS  Testing getting the current directory with small string, ESMF_UtilUTest.
3: F90, line 699
3:  PASS  Testing converting string to UPPER case, ESMF_UtilUTest.F90, line 711
3:  PASS  Testing converting string to lower case, ESMF_UtilUTest.F90, line 721
3:  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtilUTest.F90, line 733
3:  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtilUTest.F90, line 740
3:  PASS  ESMF_UtilStringInt2String() - Test, ESMF_UtilUTest.F90, line 749
3:  PASS  String -> Integer -> String conversion correctness - Test, ESMF_UtilUTes
3: t.F90, line 756
3:  PASS  ESMF_UtilString2Int() - negative value - Test, ESMF_UtilUTest.F90, line 
3: 764
3:  PASS  ESMF_UtilString2Int() - negative value - Test, ESMF_UtilUTest.F90, line 
3: 771
3:  PASS  ESMF_UtilString2Int() - explicit positive value - Test, ESMF_UtilUTest.F
3: 90, line 779
3:  PASS  ESMF_UtilString2Int() - explicit positive value - Test, ESMF_UtilUTest.F
3: 90, line 786
3:  PASS  ESMF_UtilString2Int() - leading blanks - Test, ESMF_UtilUTest.F90, line 
3: 794
3:  PASS  ESMF_UtilString2Int() - leading blanks - Test, ESMF_UtilUTest.F90, line 
3: 801
3:  PASS  ESMF_UtilString2Int() - trailing blanks - Test, ESMF_UtilUTest.F90, line
3:  809
3:  PASS  ESMF_UtilString2Int() - trailing blanks - Test, ESMF_UtilUTest.F90, line
3:  816
3:  PASS  ESMF_UtilString2Int() - special string missing - Test, ESMF_UtilUTest.F9
3: 0, line 826
3:  PASS  ESMF_UtilString2Int() - special string - Test, ESMF_UtilUTest.F90, line 
3: 836
3:  PASS  ESMF_UtilString2Int() - special string - Test, ESMF_UtilUTest.F90, line 
3: 843
3:  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.F90, line 856
3:  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.F90, line 863
3:  PASS  ESMF_UtilString2Real() - negative value - Test, ESMF_UtilUTest.F90, line
3:  871
3:  PASS  ESMF_UtilString2Real() - negative value - Test, ESMF_UtilUTest.F90, line
3:  878
3:  PASS  ESMF_UtilString2Real() - explicit positive value - Test, ESMF_UtilUTest.
3: F90, line 886
3:  PASS  ESMF_UtilString2Real() - explicit positive value - Test, ESMF_UtilUTest.
3: F90, line 893
3:  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
3:  901
3:  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
3:  908
3:  PASS  ESMF_UtilString2Real() - trailing blanks - Test, ESMF_UtilUTest.F90, lin
3: e 916
3:  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
3:  923
3:  PASS  ESMF_UtilString2Double() - no blanks - Test, ESMF_UtilUTest.F90, line 93
3: 6
3:  PASS  ESMF_UtilString2Double() - no blanks - Test, ESMF_UtilUTest.F90, line 94
3: 3
3:  PASS  ESMF_UtilString2Double() - negative value - Test, ESMF_UtilUTest.F90, li
3: ne 951
3:  PASS  ESMF_UtilString2Double() - negative value - Test, ESMF_UtilUTest.F90, li
3: ne 958
3:  PASS  ESMF_UtilString2Double() - explicit positive value - Test, ESMF_UtilUTes
3: t.F90, line 966
3:  PASS  ESMF_UtilString2Double() - explicit positive value - Test, ESMF_UtilUTes
3: t.F90, line 973
3:  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
3: ne 981
3:  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
3: ne 988
3:  PASS  ESMF_UtilString2Double() - trailing blanks - Test, ESMF_UtilUTest.F90, l
3: ine 996
3:  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
3: ne 1003
3:  PASS  Testing concatenating strings, ESMF_UtilUTest.F90, line 1016
3:  PASS  Testing converting C string to Fortran string, ESMF_UtilUTest.F90, line 
3: 1031
3:  PASS  Testing converting Fortran string to C string, ESMF_UtilUTest.F90, line 
3: 1047
3:  Ending Test, file ESMF_UtilUTest.F90, line 1053
1:  PET           1  Test Elapsed Time    3.82600000000000       msec.
2:  PET           2  Test Elapsed Time    4.06100000000000       msec.
0:  PET           0  Test Elapsed Time    3.81900000000000       msec.
3:  PET           3  Test Elapsed Time    2.89000000000000       msec.
